
DA4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002e6  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  0000033a  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000020  00000000  00000000  0000036a  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000026b  00000000  00000000  0000038a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000e5  00000000  00000000  000005f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   000001ee  00000000  00000000  000006da  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000024  00000000  00000000  000008c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000176  00000000  00000000  000008ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000001aa  00000000  00000000  00000a62  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000010  00000000  00000000  00000c0c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
	//3 loops in 3 loops that increase all frequencies to 90%
	//Then 3 loops to decrease all to 10%
	//one more loop to exentuate green
	//go through one period, and all the intensities
	
	DDRB =  0xFF;
  80:	8f ef       	ldi	r24, 0xFF	; 255
  82:	84 b9       	out	0x04, r24	; 4
	DDRD = 0xFF;
  84:	8a b9       	out	0x0a, r24	; 10
	//TIMER 1	BLUE
	TCCR1A |= (1<<COM1B1)|(1<<WGM11)|(1<<WGM10);	//Outputs in OC1B (pb2)
  86:	e0 e8       	ldi	r30, 0x80	; 128
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	80 81       	ld	r24, Z
  8c:	83 62       	ori	r24, 0x23	; 35
  8e:	80 83       	st	Z, r24
	TCCR1B |= (1<<WGM13)|(1<<WGM12)|(1<<CS11)|(1<<CS10);
  90:	e1 e8       	ldi	r30, 0x81	; 129
  92:	f0 e0       	ldi	r31, 0x00	; 0
  94:	80 81       	ld	r24, Z
  96:	8b 61       	ori	r24, 0x1B	; 27
  98:	80 83       	st	Z, r24
	OCR1A = 25;//top, thus changing is changing frequency
  9a:	89 e1       	ldi	r24, 0x19	; 25
  9c:	90 e0       	ldi	r25, 0x00	; 0
  9e:	90 93 89 00 	sts	0x0089, r25
  a2:	80 93 88 00 	sts	0x0088, r24
	OCR1B = 5;//n, thus changing is changing the DC
  a6:	85 e0       	ldi	r24, 0x05	; 5
  a8:	90 e0       	ldi	r25, 0x00	; 0
  aa:	90 93 8b 00 	sts	0x008B, r25
  ae:	80 93 8a 00 	sts	0x008A, r24
	
	//TIMER 0	GREEN
	TCCR0A |= (1<<COM0B1)|(1<<WGM01)|(1<<WGM00);	//OUTS in pd5
  b2:	84 b5       	in	r24, 0x24	; 36
  b4:	83 62       	ori	r24, 0x23	; 35
  b6:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1<<WGM02)|(1<<CS01)|(1<<CS00);
  b8:	85 b5       	in	r24, 0x25	; 37
  ba:	8b 60       	ori	r24, 0x0B	; 11
  bc:	85 bd       	out	0x25, r24	; 37
	OCR0A = 25;
  be:	99 e1       	ldi	r25, 0x19	; 25
  c0:	97 bd       	out	0x27, r25	; 39
	OCR0B = 5;
  c2:	85 e0       	ldi	r24, 0x05	; 5
  c4:	88 bd       	out	0x28, r24	; 40
	
	//TIMER 2	RED
	TCCR2A |= (1<<COM2B1)|(1<<WGM21)|(1<<WGM20);
  c6:	e0 eb       	ldi	r30, 0xB0	; 176
  c8:	f0 e0       	ldi	r31, 0x00	; 0
  ca:	20 81       	ld	r18, Z
  cc:	23 62       	ori	r18, 0x23	; 35
  ce:	20 83       	st	Z, r18
	TCCR2B |= (1<<WGM22)|(1<<CS21)|(1<<CS20);
  d0:	e1 eb       	ldi	r30, 0xB1	; 177
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	20 81       	ld	r18, Z
  d6:	2b 60       	ori	r18, 0x0B	; 11
  d8:	20 83       	st	Z, r18
	OCR2A = 25;
  da:	90 93 b3 00 	sts	0x00B3, r25
	OCR2B = 5;
  de:	80 93 b4 00 	sts	0x00B4, r24
	
	while(1)
		{
		//BLUE+
		while (OCR1A<230)
  e2:	28 e8       	ldi	r18, 0x88	; 136
  e4:	30 e0       	ldi	r19, 0x00	; 0
				}
				OCR0B = 5;
			}
			
		//RED+
		while (OCR2A<230)
  e6:	0f 2e       	mov	r0, r31
  e8:	f3 eb       	ldi	r31, 0xB3	; 179
  ea:	ef 2e       	mov	r14, r31
  ec:	f1 2c       	mov	r15, r1
  ee:	f0 2d       	mov	r31, r0
				while (OCR0B<OCR0A)
				{
					OCR0B += 1;
					//	_delay_us(500);
				}
				OCR0B = 5;
  f0:	15 e0       	ldi	r17, 0x05	; 5
		//RED-
		while (OCR2A>30)
			{
				OCR2A -= 15;
				_delay_us(500000);
				while (OCR2B>25)
  f2:	e4 eb       	ldi	r30, 0xB4	; 180
  f4:	f0 e0       	ldi	r31, 0x00	; 0
		//BLUE -
		while (OCR1A>30)
			{
				OCR1A -= 15;
				_delay_us(500000);
				while (OCR1B>25)
  f6:	aa e8       	ldi	r26, 0x8A	; 138
  f8:	b0 e0       	ldi	r27, 0x00	; 0
				{
					OCR1B -= 1;
				//	_delay_ms(500);
				}
				OCR1B = 5;
  fa:	45 e0       	ldi	r20, 0x05	; 5
  fc:	50 e0       	ldi	r21, 0x00	; 0
  fe:	28 c0       	rjmp	.+80     	; 0x150 <main+0xd0>
	while(1)
		{
		//BLUE+
		while (OCR1A<230)
			{
				OCR1A += 15;
 100:	e9 01       	movw	r28, r18
 102:	88 81       	ld	r24, Y
 104:	99 81       	ldd	r25, Y+1	; 0x01
 106:	0f 96       	adiw	r24, 0x0f	; 15
 108:	99 83       	std	Y+1, r25	; 0x01
 10a:	88 83       	st	Y, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 10c:	87 ee       	ldi	r24, 0xE7	; 231
 10e:	93 e0       	ldi	r25, 0x03	; 3
 110:	01 97       	sbiw	r24, 0x01	; 1
 112:	f1 f7       	brne	.-4      	; 0x110 <main+0x90>
 114:	00 c0       	rjmp	.+0      	; 0x116 <main+0x96>
 116:	00 00       	nop
				_delay_us(500);
				while (OCR1B<OCR1A)
 118:	6d 91       	ld	r22, X+
 11a:	7c 91       	ld	r23, X
 11c:	11 97       	sbiw	r26, 0x01	; 1
 11e:	e9 01       	movw	r28, r18
 120:	88 81       	ld	r24, Y
 122:	99 81       	ldd	r25, Y+1	; 0x01
 124:	68 17       	cp	r22, r24
 126:	79 07       	cpc	r23, r25
 128:	80 f4       	brcc	.+32     	; 0x14a <main+0xca>
				{
					OCR1B += 5;
 12a:	8d 91       	ld	r24, X+
 12c:	9c 91       	ld	r25, X
 12e:	11 97       	sbiw	r26, 0x01	; 1
 130:	05 96       	adiw	r24, 0x05	; 5
 132:	11 96       	adiw	r26, 0x01	; 1
 134:	9c 93       	st	X, r25
 136:	8e 93       	st	-X, r24
		//BLUE+
		while (OCR1A<230)
			{
				OCR1A += 15;
				_delay_us(500);
				while (OCR1B<OCR1A)
 138:	6d 91       	ld	r22, X+
 13a:	7c 91       	ld	r23, X
 13c:	11 97       	sbiw	r26, 0x01	; 1
 13e:	e9 01       	movw	r28, r18
 140:	88 81       	ld	r24, Y
 142:	99 81       	ldd	r25, Y+1	; 0x01
 144:	68 17       	cp	r22, r24
 146:	79 07       	cpc	r23, r25
 148:	80 f3       	brcs	.-32     	; 0x12a <main+0xaa>
				{
					OCR1B += 5;
				//	_delay_us(500);
				}
				OCR1B = 5;
 14a:	11 96       	adiw	r26, 0x01	; 1
 14c:	5c 93       	st	X, r21
 14e:	4e 93       	st	-X, r20
	OCR2B = 5;
	
	while(1)
		{
		//BLUE+
		while (OCR1A<230)
 150:	e9 01       	movw	r28, r18
 152:	88 81       	ld	r24, Y
 154:	99 81       	ldd	r25, Y+1	; 0x01
 156:	86 3e       	cpi	r24, 0xE6	; 230
 158:	91 05       	cpc	r25, r1
 15a:	90 f2       	brcs	.-92     	; 0x100 <main+0x80>
				}
				OCR1B = 5;
			}
			
		//GREEN+
		while (OCR0A<230)
 15c:	87 b5       	in	r24, 0x27	; 39
 15e:	86 3e       	cpi	r24, 0xE6	; 230
 160:	c0 f4       	brcc	.+48     	; 0x192 <main+0x112>
			{
				OCR0A += 15;
 162:	87 b5       	in	r24, 0x27	; 39
 164:	81 5f       	subi	r24, 0xF1	; 241
 166:	87 bd       	out	0x27, r24	; 39
 168:	87 ee       	ldi	r24, 0xE7	; 231
 16a:	93 e0       	ldi	r25, 0x03	; 3
 16c:	01 97       	sbiw	r24, 0x01	; 1
 16e:	f1 f7       	brne	.-4      	; 0x16c <main+0xec>
 170:	00 c0       	rjmp	.+0      	; 0x172 <main+0xf2>
 172:	00 00       	nop
				_delay_us(500);
				while (OCR0B<OCR0A)
 174:	98 b5       	in	r25, 0x28	; 40
 176:	87 b5       	in	r24, 0x27	; 39
 178:	98 17       	cp	r25, r24
 17a:	38 f4       	brcc	.+14     	; 0x18a <main+0x10a>
				{
					OCR0B += 5;
 17c:	88 b5       	in	r24, 0x28	; 40
 17e:	8b 5f       	subi	r24, 0xFB	; 251
 180:	88 bd       	out	0x28, r24	; 40
		//GREEN+
		while (OCR0A<230)
			{
				OCR0A += 15;
				_delay_us(500);
				while (OCR0B<OCR0A)
 182:	98 b5       	in	r25, 0x28	; 40
 184:	87 b5       	in	r24, 0x27	; 39
 186:	98 17       	cp	r25, r24
 188:	c8 f3       	brcs	.-14     	; 0x17c <main+0xfc>
				{
					OCR0B += 5;
				//	_delay_us(500);
				}
				OCR0B = 5;
 18a:	18 bd       	out	0x28, r17	; 40
				}
				OCR1B = 5;
			}
			
		//GREEN+
		while (OCR0A<230)
 18c:	87 b5       	in	r24, 0x27	; 39
 18e:	86 3e       	cpi	r24, 0xE6	; 230
 190:	40 f3       	brcs	.-48     	; 0x162 <main+0xe2>
				}
				OCR0B = 5;
			}
			
		//RED+
		while (OCR2A<230)
 192:	e7 01       	movw	r28, r14
 194:	88 81       	ld	r24, Y
 196:	86 3e       	cpi	r24, 0xE6	; 230
 198:	e0 f4       	brcc	.+56     	; 0x1d2 <main+0x152>
			{
				OCR2A += 15;
 19a:	e7 01       	movw	r28, r14
 19c:	88 81       	ld	r24, Y
 19e:	81 5f       	subi	r24, 0xF1	; 241
 1a0:	88 83       	st	Y, r24
 1a2:	87 ee       	ldi	r24, 0xE7	; 231
 1a4:	93 e0       	ldi	r25, 0x03	; 3
 1a6:	01 97       	sbiw	r24, 0x01	; 1
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <main+0x126>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <main+0x12c>
 1ac:	00 00       	nop
				_delay_us(500);
				while (OCR2B<OCR2A)
 1ae:	90 81       	ld	r25, Z
 1b0:	e7 01       	movw	r28, r14
 1b2:	88 81       	ld	r24, Y
 1b4:	98 17       	cp	r25, r24
 1b6:	40 f4       	brcc	.+16     	; 0x1c8 <main+0x148>
				{
					OCR2B += 1;
 1b8:	80 81       	ld	r24, Z
 1ba:	8f 5f       	subi	r24, 0xFF	; 255
 1bc:	80 83       	st	Z, r24
		//RED+
		while (OCR2A<230)
			{
				OCR2A += 15;
				_delay_us(500);
				while (OCR2B<OCR2A)
 1be:	90 81       	ld	r25, Z
 1c0:	e7 01       	movw	r28, r14
 1c2:	88 81       	ld	r24, Y
 1c4:	98 17       	cp	r25, r24
 1c6:	c0 f3       	brcs	.-16     	; 0x1b8 <main+0x138>
				{
					OCR2B += 1;
				//	_delay_us(500);
				}
				OCR2B = 5;
 1c8:	10 83       	st	Z, r17
				}
				OCR0B = 5;
			}
			
		//RED+
		while (OCR2A<230)
 1ca:	e7 01       	movw	r28, r14
 1cc:	88 81       	ld	r24, Y
 1ce:	86 3e       	cpi	r24, 0xE6	; 230
 1d0:	20 f3       	brcs	.-56     	; 0x19a <main+0x11a>
				OCR2B = 5;
			}					
			
		//all max
		//BLUE -
		while (OCR1A>30)
 1d2:	e9 01       	movw	r28, r18
 1d4:	88 81       	ld	r24, Y
 1d6:	99 81       	ldd	r25, Y+1	; 0x01
 1d8:	4f 97       	sbiw	r24, 0x1f	; 31
 1da:	40 f1       	brcs	.+80     	; 0x22c <main+0x1ac>
			{
				OCR1A -= 15;
 1dc:	e9 01       	movw	r28, r18
 1de:	88 81       	ld	r24, Y
 1e0:	99 81       	ldd	r25, Y+1	; 0x01
 1e2:	0f 97       	sbiw	r24, 0x0f	; 15
 1e4:	99 83       	std	Y+1, r25	; 0x01
 1e6:	88 83       	st	Y, r24
 1e8:	df ef       	ldi	r29, 0xFF	; 255
 1ea:	64 e3       	ldi	r22, 0x34	; 52
 1ec:	8c e0       	ldi	r24, 0x0C	; 12
 1ee:	d1 50       	subi	r29, 0x01	; 1
 1f0:	60 40       	sbci	r22, 0x00	; 0
 1f2:	80 40       	sbci	r24, 0x00	; 0
 1f4:	e1 f7       	brne	.-8      	; 0x1ee <main+0x16e>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <main+0x178>
 1f8:	00 00       	nop
				_delay_us(500000);
				while (OCR1B>25)
 1fa:	8d 91       	ld	r24, X+
 1fc:	9c 91       	ld	r25, X
 1fe:	11 97       	sbiw	r26, 0x01	; 1
 200:	4a 97       	sbiw	r24, 0x1a	; 26
 202:	60 f0       	brcs	.+24     	; 0x21c <main+0x19c>
				{
					OCR1B -= 1;
 204:	8d 91       	ld	r24, X+
 206:	9c 91       	ld	r25, X
 208:	11 97       	sbiw	r26, 0x01	; 1
 20a:	01 97       	sbiw	r24, 0x01	; 1
 20c:	11 96       	adiw	r26, 0x01	; 1
 20e:	9c 93       	st	X, r25
 210:	8e 93       	st	-X, r24
		//BLUE -
		while (OCR1A>30)
			{
				OCR1A -= 15;
				_delay_us(500000);
				while (OCR1B>25)
 212:	8d 91       	ld	r24, X+
 214:	9c 91       	ld	r25, X
 216:	11 97       	sbiw	r26, 0x01	; 1
 218:	4a 97       	sbiw	r24, 0x1a	; 26
 21a:	a0 f7       	brcc	.-24     	; 0x204 <main+0x184>
				{
					OCR1B -= 1;
				//	_delay_ms(500);
				}
				OCR1B = 5;
 21c:	11 96       	adiw	r26, 0x01	; 1
 21e:	5c 93       	st	X, r21
 220:	4e 93       	st	-X, r20
				OCR2B = 5;
			}					
			
		//all max
		//BLUE -
		while (OCR1A>30)
 222:	e9 01       	movw	r28, r18
 224:	88 81       	ld	r24, Y
 226:	99 81       	ldd	r25, Y+1	; 0x01
 228:	4f 97       	sbiw	r24, 0x1f	; 31
 22a:	c0 f6       	brcc	.-80     	; 0x1dc <main+0x15c>
				}
				OCR1B = 5;
			}
			
		//GREEN-
		while (OCR0A>30)
 22c:	87 b5       	in	r24, 0x27	; 39
 22e:	8f 31       	cpi	r24, 0x1F	; 31
 230:	c8 f0       	brcs	.+50     	; 0x264 <main+0x1e4>
			{
				OCR0A -= 15;
 232:	87 b5       	in	r24, 0x27	; 39
 234:	8f 50       	subi	r24, 0x0F	; 15
 236:	87 bd       	out	0x27, r24	; 39
 238:	df ef       	ldi	r29, 0xFF	; 255
 23a:	64 e3       	ldi	r22, 0x34	; 52
 23c:	8c e0       	ldi	r24, 0x0C	; 12
 23e:	d1 50       	subi	r29, 0x01	; 1
 240:	60 40       	sbci	r22, 0x00	; 0
 242:	80 40       	sbci	r24, 0x00	; 0
 244:	e1 f7       	brne	.-8      	; 0x23e <main+0x1be>
 246:	00 c0       	rjmp	.+0      	; 0x248 <main+0x1c8>
 248:	00 00       	nop
				_delay_us(500000);
				while (OCR0B>25)
 24a:	88 b5       	in	r24, 0x28	; 40
 24c:	8a 31       	cpi	r24, 0x1A	; 26
 24e:	30 f0       	brcs	.+12     	; 0x25c <main+0x1dc>
				{
					OCR0B -= 1;
 250:	88 b5       	in	r24, 0x28	; 40
 252:	81 50       	subi	r24, 0x01	; 1
 254:	88 bd       	out	0x28, r24	; 40
		//GREEN-
		while (OCR0A>30)
			{
				OCR0A -= 15;
				_delay_us(500000);
				while (OCR0B>25)
 256:	88 b5       	in	r24, 0x28	; 40
 258:	8a 31       	cpi	r24, 0x1A	; 26
 25a:	d0 f7       	brcc	.-12     	; 0x250 <main+0x1d0>
				{
					OCR0B -= 1;
				//	_delay_us(500);
				}
				OCR0B = 5;
 25c:	18 bd       	out	0x28, r17	; 40
				}
				OCR1B = 5;
			}
			
		//GREEN-
		while (OCR0A>30)
 25e:	87 b5       	in	r24, 0x27	; 39
 260:	8f 31       	cpi	r24, 0x1F	; 31
 262:	38 f7       	brcc	.-50     	; 0x232 <main+0x1b2>
				}
				OCR0B = 5;
			}
			
		//RED-
		while (OCR2A>30)
 264:	e7 01       	movw	r28, r14
 266:	88 81       	ld	r24, Y
 268:	8f 31       	cpi	r24, 0x1F	; 31
 26a:	d8 f0       	brcs	.+54     	; 0x2a2 <main+0x222>
			{
				OCR2A -= 15;
 26c:	e7 01       	movw	r28, r14
 26e:	88 81       	ld	r24, Y
 270:	8f 50       	subi	r24, 0x0F	; 15
 272:	88 83       	st	Y, r24
 274:	df ef       	ldi	r29, 0xFF	; 255
 276:	64 e3       	ldi	r22, 0x34	; 52
 278:	8c e0       	ldi	r24, 0x0C	; 12
 27a:	d1 50       	subi	r29, 0x01	; 1
 27c:	60 40       	sbci	r22, 0x00	; 0
 27e:	80 40       	sbci	r24, 0x00	; 0
 280:	e1 f7       	brne	.-8      	; 0x27a <main+0x1fa>
 282:	00 c0       	rjmp	.+0      	; 0x284 <main+0x204>
 284:	00 00       	nop
				_delay_us(500000);
				while (OCR2B>25)
 286:	80 81       	ld	r24, Z
 288:	8a 31       	cpi	r24, 0x1A	; 26
 28a:	30 f0       	brcs	.+12     	; 0x298 <main+0x218>
				{
					OCR2B -= 1;
 28c:	80 81       	ld	r24, Z
 28e:	81 50       	subi	r24, 0x01	; 1
 290:	80 83       	st	Z, r24
		//RED-
		while (OCR2A>30)
			{
				OCR2A -= 15;
				_delay_us(500000);
				while (OCR2B>25)
 292:	80 81       	ld	r24, Z
 294:	8a 31       	cpi	r24, 0x1A	; 26
 296:	d0 f7       	brcc	.-12     	; 0x28c <main+0x20c>
				{
					OCR2B -= 1;
				//	_delay_us(500);
				}
				OCR2B = 5;
 298:	10 83       	st	Z, r17
				}
				OCR0B = 5;
			}
			
		//RED-
		while (OCR2A>30)
 29a:	e7 01       	movw	r28, r14
 29c:	88 81       	ld	r24, Y
 29e:	8f 31       	cpi	r24, 0x1F	; 31
 2a0:	28 f7       	brcc	.-54     	; 0x26c <main+0x1ec>
				}
				OCR2B = 5;
			}
			
		//GREEN+
		while (OCR0A<230)
 2a2:	87 b5       	in	r24, 0x27	; 39
 2a4:	86 3e       	cpi	r24, 0xE6	; 230
 2a6:	08 f0       	brcs	.+2      	; 0x2aa <main+0x22a>
 2a8:	53 cf       	rjmp	.-346    	; 0x150 <main+0xd0>
			{
				OCR0A += 15;
 2aa:	87 b5       	in	r24, 0x27	; 39
 2ac:	81 5f       	subi	r24, 0xF1	; 241
 2ae:	87 bd       	out	0x27, r24	; 39
 2b0:	df ef       	ldi	r29, 0xFF	; 255
 2b2:	64 e3       	ldi	r22, 0x34	; 52
 2b4:	8c e0       	ldi	r24, 0x0C	; 12
 2b6:	d1 50       	subi	r29, 0x01	; 1
 2b8:	60 40       	sbci	r22, 0x00	; 0
 2ba:	80 40       	sbci	r24, 0x00	; 0
 2bc:	e1 f7       	brne	.-8      	; 0x2b6 <main+0x236>
 2be:	00 c0       	rjmp	.+0      	; 0x2c0 <main+0x240>
 2c0:	00 00       	nop
				_delay_us(500000);
				while (OCR0B<OCR0A)
 2c2:	98 b5       	in	r25, 0x28	; 40
 2c4:	87 b5       	in	r24, 0x27	; 39
 2c6:	98 17       	cp	r25, r24
 2c8:	38 f4       	brcc	.+14     	; 0x2d8 <main+0x258>
				{
					OCR0B += 1;
 2ca:	88 b5       	in	r24, 0x28	; 40
 2cc:	8f 5f       	subi	r24, 0xFF	; 255
 2ce:	88 bd       	out	0x28, r24	; 40
		//GREEN+
		while (OCR0A<230)
			{
				OCR0A += 15;
				_delay_us(500000);
				while (OCR0B<OCR0A)
 2d0:	98 b5       	in	r25, 0x28	; 40
 2d2:	87 b5       	in	r24, 0x27	; 39
 2d4:	98 17       	cp	r25, r24
 2d6:	c8 f3       	brcs	.-14     	; 0x2ca <main+0x24a>
				{
					OCR0B += 1;
					//	_delay_us(500);
				}
				OCR0B = 5;
 2d8:	18 bd       	out	0x28, r17	; 40
				}
				OCR2B = 5;
			}
			
		//GREEN+
		while (OCR0A<230)
 2da:	87 b5       	in	r24, 0x27	; 39
 2dc:	86 3e       	cpi	r24, 0xE6	; 230
 2de:	28 f3       	brcs	.-54     	; 0x2aa <main+0x22a>
 2e0:	37 cf       	rjmp	.-402    	; 0x150 <main+0xd0>

000002e2 <_exit>:
 2e2:	f8 94       	cli

000002e4 <__stop_program>:
 2e4:	ff cf       	rjmp	.-2      	; 0x2e4 <__stop_program>
