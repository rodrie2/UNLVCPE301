
DA5_TASK2_STEPPER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000026a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002be  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002f0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  00000330  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000006cd  00000000  00000000  00000360  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000013f  00000000  00000000  00000a2d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000267  00000000  00000000  00000b6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00000dd4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001cb  00000000  00000000  00000e18  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005b4  00000000  00000000  00000fe3  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00001597  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 51 00 	call	0xa2	; 0xa2 <main>
  78:	0c 94 33 01 	jmp	0x266	; 0x266 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <adc_read>:
	return 0;
}

int adc_read()
{
	ADMUX &= 0x00;
  80:	ec e7       	ldi	r30, 0x7C	; 124
  82:	f0 e0       	ldi	r31, 0x00	; 0
  84:	80 81       	ld	r24, Z
  86:	10 82       	st	Z, r1
	ADCSRA |= (1<<ADSC);
  88:	ea e7       	ldi	r30, 0x7A	; 122
  8a:	f0 e0       	ldi	r31, 0x00	; 0
  8c:	80 81       	ld	r24, Z
  8e:	80 64       	ori	r24, 0x40	; 64
  90:	80 83       	st	Z, r24
	while((ADCSRA & (1<<ADSC)));
  92:	80 81       	ld	r24, Z
  94:	86 fd       	sbrc	r24, 6
  96:	fd cf       	rjmp	.-6      	; 0x92 <adc_read+0x12>
	return ADC;
  98:	80 91 78 00 	lds	r24, 0x0078
  9c:	90 91 79 00 	lds	r25, 0x0079
}
  a0:	08 95       	ret

000000a2 <main>:
#include <avr/io.h>
#include <util/delay.h>

int main()
{
	DDRD = 0x0F;
  a2:	8f e0       	ldi	r24, 0x0F	; 15
  a4:	8a b9       	out	0x0a, r24	; 10
	while((ADCSRA & (1<<ADSC)));
	return ADC;
}
void ADC_init(void)
{
	ADCSRA = (1<<ADEN);//|(1<<ADSC);//|(1<<ADIF);
  a6:	80 e8       	ldi	r24, 0x80	; 128
  a8:	80 93 7a 00 	sts	0x007A, r24
	while(1)
	{
		ADC1 = adc_read();
		if ((ADC1 >= 901) && (ADC1 < 1024))
		{
			PORTD = 0x6;		//fast speed
  ac:	06 e0       	ldi	r16, 0x06	; 6
			_delay_ms(10);
			PORTD = 0xC;
  ae:	1c e0       	ldi	r17, 0x0C	; 12
			_delay_ms(10);
			PORTD = 0x9;
  b0:	d9 e0       	ldi	r29, 0x09	; 9
			_delay_ms(10);
			PORTD = 0x3;
  b2:	c3 e0       	ldi	r28, 0x03	; 3
	DDRD = 0x0F;
	int ADC1 = 0;
	ADC_init();
	while(1)
	{
		ADC1 = adc_read();
  b4:	0e 94 40 00 	call	0x80	; 0x80 <adc_read>
		if ((ADC1 >= 901) && (ADC1 < 1024))
  b8:	9c 01       	movw	r18, r24
  ba:	25 58       	subi	r18, 0x85	; 133
  bc:	33 40       	sbci	r19, 0x03	; 3
  be:	2b 37       	cpi	r18, 0x7B	; 123
  c0:	31 05       	cpc	r19, r1
  c2:	e0 f4       	brcc	.+56     	; 0xfc <main+0x5a>
		{
			PORTD = 0x6;		//fast speed
  c4:	0b b9       	out	0x0b, r16	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c6:	ef e1       	ldi	r30, 0x1F	; 31
  c8:	fe e4       	ldi	r31, 0x4E	; 78
  ca:	31 97       	sbiw	r30, 0x01	; 1
  cc:	f1 f7       	brne	.-4      	; 0xca <main+0x28>
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <main+0x2e>
  d0:	00 00       	nop
			_delay_ms(10);
			PORTD = 0xC;
  d2:	1b b9       	out	0x0b, r17	; 11
  d4:	ef e1       	ldi	r30, 0x1F	; 31
  d6:	fe e4       	ldi	r31, 0x4E	; 78
  d8:	31 97       	sbiw	r30, 0x01	; 1
  da:	f1 f7       	brne	.-4      	; 0xd8 <main+0x36>
  dc:	00 c0       	rjmp	.+0      	; 0xde <main+0x3c>
  de:	00 00       	nop
			_delay_ms(10);
			PORTD = 0x9;
  e0:	db b9       	out	0x0b, r29	; 11
  e2:	ef e1       	ldi	r30, 0x1F	; 31
  e4:	fe e4       	ldi	r31, 0x4E	; 78
  e6:	31 97       	sbiw	r30, 0x01	; 1
  e8:	f1 f7       	brne	.-4      	; 0xe6 <main+0x44>
  ea:	00 c0       	rjmp	.+0      	; 0xec <main+0x4a>
  ec:	00 00       	nop
			_delay_ms(10);
			PORTD = 0x3;
  ee:	cb b9       	out	0x0b, r28	; 11
  f0:	ef e1       	ldi	r30, 0x1F	; 31
  f2:	fe e4       	ldi	r31, 0x4E	; 78
  f4:	31 97       	sbiw	r30, 0x01	; 1
  f6:	f1 f7       	brne	.-4      	; 0xf4 <main+0x52>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <main+0x58>
  fa:	00 00       	nop
			_delay_ms(10);
		}
		if ((ADC1 >= 700) && (ADC1 < 901))
  fc:	9c 01       	movw	r18, r24
  fe:	2c 5b       	subi	r18, 0xBC	; 188
 100:	32 40       	sbci	r19, 0x02	; 2
 102:	29 3c       	cpi	r18, 0xC9	; 201
 104:	31 05       	cpc	r19, r1
 106:	e0 f4       	brcc	.+56     	; 0x140 <main+0x9e>
		{
			PORTD = 0x6;		//fast speed
 108:	0b b9       	out	0x0b, r16	; 11
 10a:	ef e2       	ldi	r30, 0x2F	; 47
 10c:	f5 e7       	ldi	r31, 0x75	; 117
 10e:	31 97       	sbiw	r30, 0x01	; 1
 110:	f1 f7       	brne	.-4      	; 0x10e <main+0x6c>
 112:	00 c0       	rjmp	.+0      	; 0x114 <main+0x72>
 114:	00 00       	nop
			_delay_ms(15);
			PORTD = 0xC;
 116:	1b b9       	out	0x0b, r17	; 11
 118:	ef e2       	ldi	r30, 0x2F	; 47
 11a:	f5 e7       	ldi	r31, 0x75	; 117
 11c:	31 97       	sbiw	r30, 0x01	; 1
 11e:	f1 f7       	brne	.-4      	; 0x11c <main+0x7a>
 120:	00 c0       	rjmp	.+0      	; 0x122 <main+0x80>
 122:	00 00       	nop
			_delay_ms(15);
			PORTD = 0x9;
 124:	db b9       	out	0x0b, r29	; 11
 126:	ef e2       	ldi	r30, 0x2F	; 47
 128:	f5 e7       	ldi	r31, 0x75	; 117
 12a:	31 97       	sbiw	r30, 0x01	; 1
 12c:	f1 f7       	brne	.-4      	; 0x12a <main+0x88>
 12e:	00 c0       	rjmp	.+0      	; 0x130 <main+0x8e>
 130:	00 00       	nop
			_delay_ms(15);
			PORTD = 0x3;
 132:	cb b9       	out	0x0b, r28	; 11
 134:	ef e2       	ldi	r30, 0x2F	; 47
 136:	f5 e7       	ldi	r31, 0x75	; 117
 138:	31 97       	sbiw	r30, 0x01	; 1
 13a:	f1 f7       	brne	.-4      	; 0x138 <main+0x96>
 13c:	00 c0       	rjmp	.+0      	; 0x13e <main+0x9c>
 13e:	00 00       	nop
			_delay_ms(15);
		}
		if ((ADC1 < 700)&&(ADC1>=500))
 140:	9c 01       	movw	r18, r24
 142:	24 5f       	subi	r18, 0xF4	; 244
 144:	31 40       	sbci	r19, 0x01	; 1
 146:	28 3c       	cpi	r18, 0xC8	; 200
 148:	31 05       	cpc	r19, r1
 14a:	e0 f4       	brcc	.+56     	; 0x184 <main+0xe2>
		{
			PORTD = 0x6;		//fast speed
 14c:	0b b9       	out	0x0b, r16	; 11
 14e:	ef e3       	ldi	r30, 0x3F	; 63
 150:	fc e9       	ldi	r31, 0x9C	; 156
 152:	31 97       	sbiw	r30, 0x01	; 1
 154:	f1 f7       	brne	.-4      	; 0x152 <main+0xb0>
 156:	00 c0       	rjmp	.+0      	; 0x158 <main+0xb6>
 158:	00 00       	nop
			_delay_ms(20);
			PORTD = 0xC;
 15a:	1b b9       	out	0x0b, r17	; 11
 15c:	ef e3       	ldi	r30, 0x3F	; 63
 15e:	fc e9       	ldi	r31, 0x9C	; 156
 160:	31 97       	sbiw	r30, 0x01	; 1
 162:	f1 f7       	brne	.-4      	; 0x160 <main+0xbe>
 164:	00 c0       	rjmp	.+0      	; 0x166 <main+0xc4>
 166:	00 00       	nop
			_delay_ms(20);
			PORTD = 0x9;
 168:	db b9       	out	0x0b, r29	; 11
 16a:	ef e3       	ldi	r30, 0x3F	; 63
 16c:	fc e9       	ldi	r31, 0x9C	; 156
 16e:	31 97       	sbiw	r30, 0x01	; 1
 170:	f1 f7       	brne	.-4      	; 0x16e <main+0xcc>
 172:	00 c0       	rjmp	.+0      	; 0x174 <main+0xd2>
 174:	00 00       	nop
			_delay_ms(20);
			PORTD = 0x3;
 176:	cb b9       	out	0x0b, r28	; 11
 178:	ef e3       	ldi	r30, 0x3F	; 63
 17a:	fc e9       	ldi	r31, 0x9C	; 156
 17c:	31 97       	sbiw	r30, 0x01	; 1
 17e:	f1 f7       	brne	.-4      	; 0x17c <main+0xda>
 180:	00 c0       	rjmp	.+0      	; 0x182 <main+0xe0>
 182:	00 00       	nop
			_delay_ms(20);
		}
		if ((ADC1 < 500)&&(ADC1>=300))
 184:	9c 01       	movw	r18, r24
 186:	2c 52       	subi	r18, 0x2C	; 44
 188:	31 40       	sbci	r19, 0x01	; 1
 18a:	28 3c       	cpi	r18, 0xC8	; 200
 18c:	31 05       	cpc	r19, r1
 18e:	e0 f4       	brcc	.+56     	; 0x1c8 <main+0x126>
		{
			PORTD = 0x6;		//fast speed
 190:	0b b9       	out	0x0b, r16	; 11
 192:	ef e4       	ldi	r30, 0x4F	; 79
 194:	f3 ec       	ldi	r31, 0xC3	; 195
 196:	31 97       	sbiw	r30, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <main+0xf4>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <main+0xfa>
 19c:	00 00       	nop
			_delay_ms(25);
			PORTD = 0xC;
 19e:	1b b9       	out	0x0b, r17	; 11
 1a0:	ef e4       	ldi	r30, 0x4F	; 79
 1a2:	f3 ec       	ldi	r31, 0xC3	; 195
 1a4:	31 97       	sbiw	r30, 0x01	; 1
 1a6:	f1 f7       	brne	.-4      	; 0x1a4 <main+0x102>
 1a8:	00 c0       	rjmp	.+0      	; 0x1aa <main+0x108>
 1aa:	00 00       	nop
			_delay_ms(25);
			PORTD = 0x9;
 1ac:	db b9       	out	0x0b, r29	; 11
 1ae:	ef e4       	ldi	r30, 0x4F	; 79
 1b0:	f3 ec       	ldi	r31, 0xC3	; 195
 1b2:	31 97       	sbiw	r30, 0x01	; 1
 1b4:	f1 f7       	brne	.-4      	; 0x1b2 <main+0x110>
 1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <main+0x116>
 1b8:	00 00       	nop
			_delay_ms(25);
			PORTD = 0x3;
 1ba:	cb b9       	out	0x0b, r28	; 11
 1bc:	ef e4       	ldi	r30, 0x4F	; 79
 1be:	f3 ec       	ldi	r31, 0xC3	; 195
 1c0:	31 97       	sbiw	r30, 0x01	; 1
 1c2:	f1 f7       	brne	.-4      	; 0x1c0 <main+0x11e>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <main+0x124>
 1c6:	00 00       	nop
			_delay_ms(25);
		}
		if ((ADC1 < 300)&&(ADC1>=150))
 1c8:	9c 01       	movw	r18, r24
 1ca:	26 59       	subi	r18, 0x96	; 150
 1cc:	31 09       	sbc	r19, r1
 1ce:	26 39       	cpi	r18, 0x96	; 150
 1d0:	31 05       	cpc	r19, r1
 1d2:	e0 f4       	brcc	.+56     	; 0x20c <main+0x16a>
		{
			PORTD = 0x6;		//fast speed
 1d4:	0b b9       	out	0x0b, r16	; 11
 1d6:	ef e5       	ldi	r30, 0x5F	; 95
 1d8:	fa ee       	ldi	r31, 0xEA	; 234
 1da:	31 97       	sbiw	r30, 0x01	; 1
 1dc:	f1 f7       	brne	.-4      	; 0x1da <main+0x138>
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <main+0x13e>
 1e0:	00 00       	nop
			_delay_ms(30);
			PORTD = 0xC;
 1e2:	1b b9       	out	0x0b, r17	; 11
 1e4:	ef e5       	ldi	r30, 0x5F	; 95
 1e6:	fa ee       	ldi	r31, 0xEA	; 234
 1e8:	31 97       	sbiw	r30, 0x01	; 1
 1ea:	f1 f7       	brne	.-4      	; 0x1e8 <main+0x146>
 1ec:	00 c0       	rjmp	.+0      	; 0x1ee <main+0x14c>
 1ee:	00 00       	nop
			_delay_ms(30);
			PORTD = 0x9;
 1f0:	db b9       	out	0x0b, r29	; 11
 1f2:	ef e5       	ldi	r30, 0x5F	; 95
 1f4:	fa ee       	ldi	r31, 0xEA	; 234
 1f6:	31 97       	sbiw	r30, 0x01	; 1
 1f8:	f1 f7       	brne	.-4      	; 0x1f6 <main+0x154>
 1fa:	00 c0       	rjmp	.+0      	; 0x1fc <main+0x15a>
 1fc:	00 00       	nop
			_delay_ms(30);
			PORTD = 0x3;
 1fe:	cb b9       	out	0x0b, r28	; 11
 200:	ef e5       	ldi	r30, 0x5F	; 95
 202:	fa ee       	ldi	r31, 0xEA	; 234
 204:	31 97       	sbiw	r30, 0x01	; 1
 206:	f1 f7       	brne	.-4      	; 0x204 <main+0x162>
 208:	00 c0       	rjmp	.+0      	; 0x20a <main+0x168>
 20a:	00 00       	nop
			_delay_ms(30);
		}
		if ((ADC1 < 150)&&(ADC1>=0))
 20c:	86 39       	cpi	r24, 0x96	; 150
 20e:	91 05       	cpc	r25, r1
 210:	08 f0       	brcs	.+2      	; 0x214 <main+0x172>
 212:	50 cf       	rjmp	.-352    	; 0xb4 <main+0x12>
		{
			PORTD = 0x6;
 214:	0b b9       	out	0x0b, r16	; 11
 216:	ff ef       	ldi	r31, 0xFF	; 255
 218:	29 ef       	ldi	r18, 0xF9	; 249
 21a:	80 e0       	ldi	r24, 0x00	; 0
 21c:	f1 50       	subi	r31, 0x01	; 1
 21e:	20 40       	sbci	r18, 0x00	; 0
 220:	80 40       	sbci	r24, 0x00	; 0
 222:	e1 f7       	brne	.-8      	; 0x21c <main+0x17a>
 224:	00 c0       	rjmp	.+0      	; 0x226 <main+0x184>
 226:	00 00       	nop
			_delay_ms(40);
			PORTD = 0xC;
 228:	1b b9       	out	0x0b, r17	; 11
 22a:	9f ef       	ldi	r25, 0xFF	; 255
 22c:	e9 ef       	ldi	r30, 0xF9	; 249
 22e:	f0 e0       	ldi	r31, 0x00	; 0
 230:	91 50       	subi	r25, 0x01	; 1
 232:	e0 40       	sbci	r30, 0x00	; 0
 234:	f0 40       	sbci	r31, 0x00	; 0
 236:	e1 f7       	brne	.-8      	; 0x230 <main+0x18e>
 238:	00 c0       	rjmp	.+0      	; 0x23a <main+0x198>
 23a:	00 00       	nop
			_delay_ms(40);
			PORTD = 0x9;
 23c:	db b9       	out	0x0b, r29	; 11
 23e:	2f ef       	ldi	r18, 0xFF	; 255
 240:	89 ef       	ldi	r24, 0xF9	; 249
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	21 50       	subi	r18, 0x01	; 1
 246:	80 40       	sbci	r24, 0x00	; 0
 248:	90 40       	sbci	r25, 0x00	; 0
 24a:	e1 f7       	brne	.-8      	; 0x244 <main+0x1a2>
 24c:	00 c0       	rjmp	.+0      	; 0x24e <main+0x1ac>
 24e:	00 00       	nop
			_delay_ms(40);
			PORTD = 0x3;
 250:	cb b9       	out	0x0b, r28	; 11
 252:	ef ef       	ldi	r30, 0xFF	; 255
 254:	f9 ef       	ldi	r31, 0xF9	; 249
 256:	20 e0       	ldi	r18, 0x00	; 0
 258:	e1 50       	subi	r30, 0x01	; 1
 25a:	f0 40       	sbci	r31, 0x00	; 0
 25c:	20 40       	sbci	r18, 0x00	; 0
 25e:	e1 f7       	brne	.-8      	; 0x258 <main+0x1b6>
 260:	00 c0       	rjmp	.+0      	; 0x262 <main+0x1c0>
 262:	00 00       	nop
 264:	27 cf       	rjmp	.-434    	; 0xb4 <main+0x12>

00000266 <_exit>:
 266:	f8 94       	cli

00000268 <__stop_program>:
 268:	ff cf       	rjmp	.-2      	; 0x268 <__stop_program>
