
NOKIALCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000032  00800100  00000c58  00000cec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c58  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000001fa  00800132  00800132  00000d1e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d1e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d7c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000dbc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000892  00000000  00000000  00000e44  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000002f9  00000000  00000000  000016d6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000031a  00000000  00000000  000019cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000184  00000000  00000000  00001cec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002e1  00000000  00000000  00001e70  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004e1  00000000  00000000  00002151  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00002632  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 24 01 	jmp	0x248	; 0x248 <__ctors_end>
   4:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
   8:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
   c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  10:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  14:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  18:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  1c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  20:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  24:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  28:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  2c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  30:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  34:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  38:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  3c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  40:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  44:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  48:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  4c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  50:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  54:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  58:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  5c:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  60:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>
  64:	0c 94 41 01 	jmp	0x282	; 0x282 <__bad_interrupt>

00000068 <CHARSET>:
  68:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
  78:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
  88:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
  98:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
  a8:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
  b8:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
  c8:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
  d8:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
  e8:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
  f8:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
 108:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
 118:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
 128:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
 138:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
 148:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
 158:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
 168:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
 178:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
 188:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
 198:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
 1a8:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
 1b8:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
 1c8:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
 1d8:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
 1e8:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
 1f8:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
 208:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
 218:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
 228:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
 238:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

00000248 <__ctors_end>:
 248:	11 24       	eor	r1, r1
 24a:	1f be       	out	0x3f, r1	; 63
 24c:	cf ef       	ldi	r28, 0xFF	; 255
 24e:	d8 e0       	ldi	r29, 0x08	; 8
 250:	de bf       	out	0x3e, r29	; 62
 252:	cd bf       	out	0x3d, r28	; 61

00000254 <__do_copy_data>:
 254:	11 e0       	ldi	r17, 0x01	; 1
 256:	a0 e0       	ldi	r26, 0x00	; 0
 258:	b1 e0       	ldi	r27, 0x01	; 1
 25a:	e8 e5       	ldi	r30, 0x58	; 88
 25c:	fc e0       	ldi	r31, 0x0C	; 12
 25e:	02 c0       	rjmp	.+4      	; 0x264 <__do_copy_data+0x10>
 260:	05 90       	lpm	r0, Z+
 262:	0d 92       	st	X+, r0
 264:	a2 33       	cpi	r26, 0x32	; 50
 266:	b1 07       	cpc	r27, r17
 268:	d9 f7       	brne	.-10     	; 0x260 <__do_copy_data+0xc>

0000026a <__do_clear_bss>:
 26a:	23 e0       	ldi	r18, 0x03	; 3
 26c:	a2 e3       	ldi	r26, 0x32	; 50
 26e:	b1 e0       	ldi	r27, 0x01	; 1
 270:	01 c0       	rjmp	.+2      	; 0x274 <.do_clear_bss_start>

00000272 <.do_clear_bss_loop>:
 272:	1d 92       	st	X+, r1

00000274 <.do_clear_bss_start>:
 274:	ac 32       	cpi	r26, 0x2C	; 44
 276:	b2 07       	cpc	r27, r18
 278:	e1 f7       	brne	.-8      	; 0x272 <.do_clear_bss_loop>
 27a:	0e 94 a9 02 	call	0x552	; 0x552 <main>
 27e:	0c 94 2a 06 	jmp	0xc54	; 0xc54 <_exit>

00000282 <__bad_interrupt>:
 282:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000286 <write>:
 */
static void write(uint8_t bytes, uint8_t is_data)
{
	register uint8_t i;
	/* Enable controller */
	PORT_LCD &= ~(1 << LCD_SCE);
 286:	2a 98       	cbi	0x05, 2	; 5

	/* We are sending data */
	if (is_data)
 288:	66 23       	and	r22, r22
 28a:	11 f0       	breq	.+4      	; 0x290 <write+0xa>
		PORT_LCD |= (1 << LCD_DC);
 28c:	2e 9a       	sbi	0x05, 6	; 5
 28e:	01 c0       	rjmp	.+2      	; 0x292 <write+0xc>
	/* We are sending commands */
	else
		PORT_LCD &= ~(1 << LCD_DC);
 290:	2e 98       	cbi	0x05, 6	; 5

	SPDR = bytes;
 292:	8e bd       	out	0x2e, r24	; 46
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)))
 294:	0d b4       	in	r0, 0x2d	; 45
 296:	07 fe       	sbrs	r0, 7
 298:	fd cf       	rjmp	.-6      	; 0x294 <write+0xe>
		//PORT_LCD |= (1 << LCD_CLK);
		//PORT_LCD &= ~(1 << LCD_CLK);
	//}

	/* Disable controller */
	PORT_LCD |= (1 << LCD_SCE);
 29a:	2a 9a       	sbi	0x05, 2	; 5
 29c:	08 95       	ret

0000029e <write_cmd>:
}

static void write_cmd(uint8_t cmd)
{
	write(cmd, 0);
 29e:	60 e0       	ldi	r22, 0x00	; 0
 2a0:	0e 94 43 01 	call	0x286	; 0x286 <write>
 2a4:	08 95       	ret

000002a6 <nokia_lcd_init>:
/*
 * Public functions
 */

void nokia_lcd_init(void)
{
 2a6:	cf 93       	push	r28
 2a8:	df 93       	push	r29
	//DDR_LCD |= (1 << LCD_DC);
	//DDR_LCD |= (1 << LCD_DIN);
	//DDR_LCD |= (1 << LCD_CLK);

	/* Reset display */
	PORT_LCD |= (1 << LCD_RST);
 2aa:	29 9a       	sbi	0x05, 1	; 5
	PORT_LCD |= (1 << LCD_SCE);
 2ac:	2a 9a       	sbi	0x05, 2	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2ae:	83 ec       	ldi	r24, 0xC3	; 195
 2b0:	99 e0       	ldi	r25, 0x09	; 9
 2b2:	01 97       	sbiw	r24, 0x01	; 1
 2b4:	f1 f7       	brne	.-4      	; 0x2b2 <nokia_lcd_init+0xc>
 2b6:	00 c0       	rjmp	.+0      	; 0x2b8 <nokia_lcd_init+0x12>
 2b8:	00 00       	nop
	_delay_ms(10);
	PORT_LCD &= ~(1 << LCD_RST);
 2ba:	29 98       	cbi	0x05, 1	; 5
 2bc:	8b e5       	ldi	r24, 0x5B	; 91
 2be:	94 e4       	ldi	r25, 0x44	; 68
 2c0:	01 97       	sbiw	r24, 0x01	; 1
 2c2:	f1 f7       	brne	.-4      	; 0x2c0 <nokia_lcd_init+0x1a>
 2c4:	00 c0       	rjmp	.+0      	; 0x2c6 <nokia_lcd_init+0x20>
 2c6:	00 00       	nop
	_delay_ms(70);
	PORT_LCD |= (1 << LCD_RST);
 2c8:	29 9a       	sbi	0x05, 1	; 5

	/*
	 * Initialize display
	 */
	/* Enable controller */
	PORT_LCD &= ~(1 << LCD_SCE);
 2ca:	2a 98       	cbi	0x05, 2	; 5
	/* -LCD Extended Commands mode- */
	write_cmd(0x21);
 2cc:	81 e2       	ldi	r24, 0x21	; 33
 2ce:	0e 94 4f 01 	call	0x29e	; 0x29e <write_cmd>
	/* LCD bias mode 1:48 */
	write_cmd(0x13);
 2d2:	83 e1       	ldi	r24, 0x13	; 19
 2d4:	0e 94 4f 01 	call	0x29e	; 0x29e <write_cmd>
	/* Set temperature coefficient */
	write_cmd(0x06);
 2d8:	86 e0       	ldi	r24, 0x06	; 6
 2da:	0e 94 4f 01 	call	0x29e	; 0x29e <write_cmd>
	/* Default VOP (3.06 + 66 * 0.06 = 7V) */
	write_cmd(0xC2);
 2de:	82 ec       	ldi	r24, 0xC2	; 194
 2e0:	0e 94 4f 01 	call	0x29e	; 0x29e <write_cmd>
	/* Standard Commands mode, powered down */
	write_cmd(0x20);
 2e4:	80 e2       	ldi	r24, 0x20	; 32
 2e6:	0e 94 4f 01 	call	0x29e	; 0x29e <write_cmd>
	/* LCD in normal mode */
	write_cmd(0x09);
 2ea:	89 e0       	ldi	r24, 0x09	; 9
 2ec:	0e 94 4f 01 	call	0x29e	; 0x29e <write_cmd>

	/* Clear LCD RAM */
	write_cmd(0x80);
 2f0:	80 e8       	ldi	r24, 0x80	; 128
 2f2:	0e 94 4f 01 	call	0x29e	; 0x29e <write_cmd>
	write_cmd(LCD_CONTRAST);
 2f6:	80 e4       	ldi	r24, 0x40	; 64
 2f8:	0e 94 4f 01 	call	0x29e	; 0x29e <write_cmd>
 2fc:	c8 ef       	ldi	r28, 0xF8	; 248
 2fe:	d1 e0       	ldi	r29, 0x01	; 1
	write(cmd, 0);
}

static void write_data(uint8_t data)
{
	write(data, 1);
 300:	61 e0       	ldi	r22, 0x01	; 1
 302:	80 e0       	ldi	r24, 0x00	; 0
 304:	0e 94 43 01 	call	0x286	; 0x286 <write>
 308:	21 97       	sbiw	r28, 0x01	; 1
	write_cmd(0x09);

	/* Clear LCD RAM */
	write_cmd(0x80);
	write_cmd(LCD_CONTRAST);
	for (i = 0; i < 504; i++)
 30a:	d1 f7       	brne	.-12     	; 0x300 <nokia_lcd_init+0x5a>
		write_data(0x00);

	/* Activate LCD */
	write_cmd(0x08);
 30c:	88 e0       	ldi	r24, 0x08	; 8
 30e:	0e 94 4f 01 	call	0x29e	; 0x29e <write_cmd>
	write_cmd(0x0C);
 312:	8c e0       	ldi	r24, 0x0C	; 12
 314:	0e 94 4f 01 	call	0x29e	; 0x29e <write_cmd>
}
 318:	df 91       	pop	r29
 31a:	cf 91       	pop	r28
 31c:	08 95       	ret

0000031e <nokia_lcd_set_pixel>:
	write_cmd(on ? 0x20 : 0x24);
}

void nokia_lcd_set_pixel(uint8_t x, uint8_t y, uint8_t value)
{
	uint8_t *byte = &nokia_lcd.screen[y/8*84+x];
 31e:	26 2f       	mov	r18, r22
 320:	26 95       	lsr	r18
 322:	26 95       	lsr	r18
 324:	26 95       	lsr	r18
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	34 e5       	ldi	r19, 0x54	; 84
 32a:	23 9f       	mul	r18, r19
 32c:	80 0d       	add	r24, r0
 32e:	91 1d       	adc	r25, r1
 330:	11 24       	eor	r1, r1
	if (value)
 332:	44 23       	and	r20, r20
 334:	79 f0       	breq	.+30     	; 0x354 <nokia_lcd_set_pixel+0x36>
		*byte |= (1 << (y % 8));
 336:	fc 01       	movw	r30, r24
 338:	ee 5c       	subi	r30, 0xCE	; 206
 33a:	fe 4f       	sbci	r31, 0xFE	; 254
 33c:	67 70       	andi	r22, 0x07	; 7
 33e:	81 e0       	ldi	r24, 0x01	; 1
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	02 c0       	rjmp	.+4      	; 0x348 <nokia_lcd_set_pixel+0x2a>
 344:	88 0f       	add	r24, r24
 346:	99 1f       	adc	r25, r25
 348:	6a 95       	dec	r22
 34a:	e2 f7       	brpl	.-8      	; 0x344 <nokia_lcd_set_pixel+0x26>
 34c:	90 81       	ld	r25, Z
 34e:	89 2b       	or	r24, r25
 350:	80 83       	st	Z, r24
 352:	08 95       	ret
	else
		*byte &= ~(1 << (y %8 ));
 354:	fc 01       	movw	r30, r24
 356:	ee 5c       	subi	r30, 0xCE	; 206
 358:	fe 4f       	sbci	r31, 0xFE	; 254
 35a:	67 70       	andi	r22, 0x07	; 7
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	02 c0       	rjmp	.+4      	; 0x366 <nokia_lcd_set_pixel+0x48>
 362:	88 0f       	add	r24, r24
 364:	99 1f       	adc	r25, r25
 366:	6a 95       	dec	r22
 368:	e2 f7       	brpl	.-8      	; 0x362 <nokia_lcd_set_pixel+0x44>
 36a:	80 95       	com	r24
 36c:	90 81       	ld	r25, Z
 36e:	89 23       	and	r24, r25
 370:	80 83       	st	Z, r24
 372:	08 95       	ret

00000374 <nokia_lcd_write_char>:
}

void nokia_lcd_write_char(char code, uint8_t scale)
{
 374:	4f 92       	push	r4
 376:	5f 92       	push	r5
 378:	6f 92       	push	r6
 37a:	7f 92       	push	r7
 37c:	8f 92       	push	r8
 37e:	9f 92       	push	r9
 380:	af 92       	push	r10
 382:	bf 92       	push	r11
 384:	cf 92       	push	r12
 386:	df 92       	push	r13
 388:	ef 92       	push	r14
 38a:	ff 92       	push	r15
 38c:	0f 93       	push	r16
 38e:	1f 93       	push	r17
 390:	cf 93       	push	r28
 392:	df 93       	push	r29
 394:	56 2e       	mov	r5, r22
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
 396:	26 2f       	mov	r18, r22
 398:	30 e0       	ldi	r19, 0x00	; 0
 39a:	49 01       	movw	r8, r18
 39c:	88 0c       	add	r8, r8
 39e:	99 1c       	adc	r9, r9
 3a0:	88 0c       	add	r8, r8
 3a2:	99 1c       	adc	r9, r9
 3a4:	82 0e       	add	r8, r18
 3a6:	93 1e       	adc	r9, r19
 3a8:	18 14       	cp	r1, r8
 3aa:	19 04       	cpc	r1, r9
 3ac:	0c f0       	brlt	.+2      	; 0x3b0 <nokia_lcd_write_char+0x3c>
 3ae:	5e c0       	rjmp	.+188    	; 0x46c <nokia_lcd_write_char+0xf8>
		for (y = 0; y < 7*scale; y++)
 3b0:	89 01       	movw	r16, r18
 3b2:	00 0f       	add	r16, r16
 3b4:	11 1f       	adc	r17, r17
 3b6:	00 0f       	add	r16, r16
 3b8:	11 1f       	adc	r17, r17
 3ba:	00 0f       	add	r16, r16
 3bc:	11 1f       	adc	r17, r17
 3be:	02 1b       	sub	r16, r18
 3c0:	13 0b       	sbc	r17, r19
 3c2:	61 2c       	mov	r6, r1
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
 3c4:	a8 2e       	mov	r10, r24
 3c6:	b1 2c       	mov	r11, r1
 3c8:	c5 01       	movw	r24, r10
 3ca:	80 97       	sbiw	r24, 0x20	; 32
 3cc:	5c 01       	movw	r10, r24
 3ce:	aa 0c       	add	r10, r10
 3d0:	bb 1c       	adc	r11, r11
 3d2:	aa 0c       	add	r10, r10
 3d4:	bb 1c       	adc	r11, r11
 3d6:	a8 0e       	add	r10, r24
 3d8:	b9 1e       	adc	r11, r25
 3da:	41 2c       	mov	r4, r1
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
 3dc:	0f 2e       	mov	r0, r31
 3de:	fb e2       	ldi	r31, 0x2B	; 43
 3e0:	cf 2e       	mov	r12, r31
 3e2:	f3 e0       	ldi	r31, 0x03	; 3
 3e4:	df 2e       	mov	r13, r31
 3e6:	f0 2d       	mov	r31, r0
 3e8:	0f 2e       	mov	r0, r31
 3ea:	fa e2       	ldi	r31, 0x2A	; 42
 3ec:	ef 2e       	mov	r14, r31
 3ee:	f3 e0       	ldi	r31, 0x03	; 3
 3f0:	ff 2e       	mov	r15, r31
 3f2:	f0 2d       	mov	r31, r0
 3f4:	2d c0       	rjmp	.+90     	; 0x450 <nokia_lcd_write_char+0xdc>
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
 3f6:	fe 01       	movw	r30, r28
 3f8:	24 91       	lpm	r18, Z
 3fa:	30 e0       	ldi	r19, 0x00	; 0
 3fc:	87 2d       	mov	r24, r7
 3fe:	65 2d       	mov	r22, r5
 400:	0e 94 1e 03 	call	0x63c	; 0x63c <__udivmodqi4>
 404:	02 c0       	rjmp	.+4      	; 0x40a <nokia_lcd_write_char+0x96>
 406:	35 95       	asr	r19
 408:	27 95       	ror	r18
 40a:	8a 95       	dec	r24
 40c:	e2 f7       	brpl	.-8      	; 0x406 <nokia_lcd_write_char+0x92>
 40e:	20 ff       	sbrs	r18, 0
 410:	0a c0       	rjmp	.+20     	; 0x426 <nokia_lcd_write_char+0xb2>
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
 412:	f6 01       	movw	r30, r12
 414:	60 81       	ld	r22, Z
 416:	67 0d       	add	r22, r7
 418:	f7 01       	movw	r30, r14
 41a:	80 81       	ld	r24, Z
 41c:	41 e0       	ldi	r20, 0x01	; 1
 41e:	86 0d       	add	r24, r6
 420:	0e 94 8f 01 	call	0x31e	; 0x31e <nokia_lcd_set_pixel>
 424:	09 c0       	rjmp	.+18     	; 0x438 <nokia_lcd_write_char+0xc4>
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);
 426:	f6 01       	movw	r30, r12
 428:	60 81       	ld	r22, Z
 42a:	67 0d       	add	r22, r7
 42c:	f7 01       	movw	r30, r14
 42e:	80 81       	ld	r24, Z
 430:	44 2d       	mov	r20, r4
 432:	86 0d       	add	r24, r6
 434:	0e 94 8f 01 	call	0x31e	; 0x31e <nokia_lcd_set_pixel>
void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
		for (y = 0; y < 7*scale; y++)
 438:	73 94       	inc	r7
 43a:	87 2d       	mov	r24, r7
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	80 17       	cp	r24, r16
 440:	91 07       	cpc	r25, r17
 442:	cc f2       	brlt	.-78     	; 0x3f6 <nokia_lcd_write_char+0x82>

void nokia_lcd_write_char(char code, uint8_t scale)
{
	register uint8_t x, y;

	for (x = 0; x < 5*scale; x++)
 444:	63 94       	inc	r6
 446:	86 2d       	mov	r24, r6
 448:	90 e0       	ldi	r25, 0x00	; 0
 44a:	88 15       	cp	r24, r8
 44c:	99 05       	cpc	r25, r9
 44e:	74 f4       	brge	.+28     	; 0x46c <nokia_lcd_write_char+0xf8>
		for (y = 0; y < 7*scale; y++)
 450:	10 16       	cp	r1, r16
 452:	11 06       	cpc	r1, r17
 454:	bc f7       	brge	.-18     	; 0x444 <nokia_lcd_write_char+0xd0>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
 456:	86 2d       	mov	r24, r6
 458:	65 2d       	mov	r22, r5
 45a:	0e 94 1e 03 	call	0x63c	; 0x63c <__udivmodqi4>
 45e:	e5 01       	movw	r28, r10
 460:	c8 0f       	add	r28, r24
 462:	d1 1d       	adc	r29, r1
 464:	c8 59       	subi	r28, 0x98	; 152
 466:	df 4f       	sbci	r29, 0xFF	; 255
 468:	74 2c       	mov	r7, r4
 46a:	c5 cf       	rjmp	.-118    	; 0x3f6 <nokia_lcd_write_char+0x82>
 46c:	80 91 2a 03 	lds	r24, 0x032A
 470:	91 e0       	ldi	r25, 0x01	; 1
 472:	98 0f       	add	r25, r24
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
 474:	85 2d       	mov	r24, r5
 476:	88 0f       	add	r24, r24
 478:	88 0f       	add	r24, r24
 47a:	85 0d       	add	r24, r5
 47c:	89 0f       	add	r24, r25
	if (nokia_lcd.cursor_x >= 84) {
 47e:	84 35       	cpi	r24, 0x54	; 84
 480:	18 f4       	brcc	.+6      	; 0x488 <nokia_lcd_write_char+0x114>
			if (pgm_read_byte(&CHARSET[code-32][x/scale]) & (1 << y/scale))
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 1);
			else
				nokia_lcd_set_pixel(nokia_lcd.cursor_x + x, nokia_lcd.cursor_y + y, 0);

	nokia_lcd.cursor_x += 5*scale + 1;
 482:	80 93 2a 03 	sts	0x032A, r24
 486:	0e c0       	rjmp	.+28     	; 0x4a4 <nokia_lcd_write_char+0x130>
	if (nokia_lcd.cursor_x >= 84) {
		nokia_lcd.cursor_x = 0;
 488:	10 92 2a 03 	sts	0x032A, r1
		nokia_lcd.cursor_y += 7*scale + 1;
 48c:	eb e2       	ldi	r30, 0x2B	; 43
 48e:	f3 e0       	ldi	r31, 0x03	; 3
 490:	80 81       	ld	r24, Z
 492:	91 e0       	ldi	r25, 0x01	; 1
 494:	98 0f       	add	r25, r24
 496:	85 2d       	mov	r24, r5
 498:	88 0f       	add	r24, r24
 49a:	88 0f       	add	r24, r24
 49c:	88 0f       	add	r24, r24
 49e:	85 19       	sub	r24, r5
 4a0:	89 0f       	add	r24, r25
 4a2:	80 83       	st	Z, r24
	}
	if (nokia_lcd.cursor_y >= 48) {
 4a4:	80 91 2b 03 	lds	r24, 0x032B
 4a8:	80 33       	cpi	r24, 0x30	; 48
 4aa:	20 f0       	brcs	.+8      	; 0x4b4 <nokia_lcd_write_char+0x140>
		nokia_lcd.cursor_x = 0;
 4ac:	10 92 2a 03 	sts	0x032A, r1
		nokia_lcd.cursor_y = 0;
 4b0:	10 92 2b 03 	sts	0x032B, r1
	}
}
 4b4:	df 91       	pop	r29
 4b6:	cf 91       	pop	r28
 4b8:	1f 91       	pop	r17
 4ba:	0f 91       	pop	r16
 4bc:	ff 90       	pop	r15
 4be:	ef 90       	pop	r14
 4c0:	df 90       	pop	r13
 4c2:	cf 90       	pop	r12
 4c4:	bf 90       	pop	r11
 4c6:	af 90       	pop	r10
 4c8:	9f 90       	pop	r9
 4ca:	8f 90       	pop	r8
 4cc:	7f 90       	pop	r7
 4ce:	6f 90       	pop	r6
 4d0:	5f 90       	pop	r5
 4d2:	4f 90       	pop	r4
 4d4:	08 95       	ret

000004d6 <nokia_lcd_write_string>:

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
 4d6:	1f 93       	push	r17
 4d8:	cf 93       	push	r28
 4da:	df 93       	push	r29
 4dc:	ec 01       	movw	r28, r24
	while(*str)
 4de:	88 81       	ld	r24, Y
 4e0:	88 23       	and	r24, r24
 4e2:	41 f0       	breq	.+16     	; 0x4f4 <nokia_lcd_write_string+0x1e>
 4e4:	16 2f       	mov	r17, r22
 4e6:	21 96       	adiw	r28, 0x01	; 1
		nokia_lcd_write_char(*str++, scale);
 4e8:	61 2f       	mov	r22, r17
 4ea:	0e 94 ba 01 	call	0x374	; 0x374 <nokia_lcd_write_char>
	}
}

void nokia_lcd_write_string(const char *str, uint8_t scale)
{
	while(*str)
 4ee:	89 91       	ld	r24, Y+
 4f0:	81 11       	cpse	r24, r1
 4f2:	fa cf       	rjmp	.-12     	; 0x4e8 <nokia_lcd_write_string+0x12>
		nokia_lcd_write_char(*str++, scale);
}
 4f4:	df 91       	pop	r29
 4f6:	cf 91       	pop	r28
 4f8:	1f 91       	pop	r17
 4fa:	08 95       	ret

000004fc <nokia_lcd_render>:
	nokia_lcd.cursor_x = x;
	nokia_lcd.cursor_y = y;
}

void nokia_lcd_render(void)
{
 4fc:	0f 93       	push	r16
 4fe:	1f 93       	push	r17
 500:	cf 93       	push	r28
 502:	df 93       	push	r29
	register unsigned i;
	/* Set column and row to 0 */
	write_cmd(0x80);
 504:	80 e8       	ldi	r24, 0x80	; 128
 506:	0e 94 4f 01 	call	0x29e	; 0x29e <write_cmd>
	write_cmd(0x40);
 50a:	80 e4       	ldi	r24, 0x40	; 64
 50c:	0e 94 4f 01 	call	0x29e	; 0x29e <write_cmd>
 510:	c2 e3       	ldi	r28, 0x32	; 50
 512:	d1 e0       	ldi	r29, 0x01	; 1
 514:	0a e2       	ldi	r16, 0x2A	; 42
 516:	13 e0       	ldi	r17, 0x03	; 3
	write(cmd, 0);
}

static void write_data(uint8_t data)
{
	write(data, 1);
 518:	61 e0       	ldi	r22, 0x01	; 1
 51a:	89 91       	ld	r24, Y+
 51c:	0e 94 43 01 	call	0x286	; 0x286 <write>
	/* Set column and row to 0 */
	write_cmd(0x80);
	write_cmd(0x40);

	/* Write screen to display */
	for (i = 0; i < 504; i++)
 520:	c0 17       	cp	r28, r16
 522:	d1 07       	cpc	r29, r17
 524:	c9 f7       	brne	.-14     	; 0x518 <nokia_lcd_render+0x1c>
		write_data(nokia_lcd.screen[i]);
}
 526:	df 91       	pop	r29
 528:	cf 91       	pop	r28
 52a:	1f 91       	pop	r17
 52c:	0f 91       	pop	r16
 52e:	08 95       	ret

00000530 <adc_read>:
 return 0;   
}

int adc_read()
{
	ADMUX &= 0x00;
 530:	ec e7       	ldi	r30, 0x7C	; 124
 532:	f0 e0       	ldi	r31, 0x00	; 0
 534:	80 81       	ld	r24, Z
 536:	10 82       	st	Z, r1
	ADCSRA |= (1<<ADSC);
 538:	ea e7       	ldi	r30, 0x7A	; 122
 53a:	f0 e0       	ldi	r31, 0x00	; 0
 53c:	80 81       	ld	r24, Z
 53e:	80 64       	ori	r24, 0x40	; 64
 540:	80 83       	st	Z, r24
	while((ADCSRA & (1<<ADSC)));
 542:	80 81       	ld	r24, Z
 544:	86 fd       	sbrc	r24, 6
 546:	fd cf       	rjmp	.-6      	; 0x542 <adc_read+0x12>
	return ADC;
 548:	80 91 78 00 	lds	r24, 0x0078
 54c:	90 91 79 00 	lds	r25, 0x0079
}
 550:	08 95       	ret

00000552 <main>:
#define LCD_DIN PB3
#define LCD_CLK PB5*/
#define ACD_0 PC0

int main(void)
{
 552:	cf 93       	push	r28
 554:	df 93       	push	r29
 556:	cd b7       	in	r28, 0x3d	; 61
 558:	de b7       	in	r29, 0x3e	; 62
 55a:	28 97       	sbiw	r28, 0x08	; 8
 55c:	0f b6       	in	r0, 0x3f	; 63
 55e:	f8 94       	cli
 560:	de bf       	out	0x3e, r29	; 62
 562:	0f be       	out	0x3f, r0	; 63
 564:	cd bf       	out	0x3d, r28	; 61
	int adc_temp;
	char temp[8];
	DDRB = 0xFF;
 566:	8f ef       	ldi	r24, 0xFF	; 255
 568:	84 b9       	out	0x04, r24	; 4
{
	/* Set MOSI and SCK output, all others input */
	//ALREADY DONE OUTSIDE FUNCTION
	//DDR_SPI = (1<<DD_MOSI)|(1<<DD_SCK);
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
 56a:	81 e5       	ldi	r24, 0x51	; 81
 56c:	8c bd       	out	0x2c, r24	; 44
	
	SPI_MasterInit();
	
//from nokia5110.c
//inserted transmit function in file.	
 nokia_lcd_init();
 56e:	0e 94 53 01 	call	0x2a6	; 0x2a6 <nokia_lcd_init>
 nokia_lcd_write_string("The current", 1);
 572:	61 e0       	ldi	r22, 0x01	; 1
 574:	80 e0       	ldi	r24, 0x00	; 0
 576:	91 e0       	ldi	r25, 0x01	; 1
 578:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <nokia_lcd_write_string>
		nokia_lcd_write_char(*str++, scale);
}

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
 57c:	10 92 2a 03 	sts	0x032A, r1
	nokia_lcd.cursor_y = y;
 580:	8a e0       	ldi	r24, 0x0A	; 10
 582:	80 93 2b 03 	sts	0x032B, r24
 nokia_lcd_set_cursor(0,10);
 nokia_lcd_write_string("temperature is", 1);
 586:	61 e0       	ldi	r22, 0x01	; 1
 588:	8c e0       	ldi	r24, 0x0C	; 12
 58a:	91 e0       	ldi	r25, 0x01	; 1
 58c:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <nokia_lcd_write_string>
	while((ADCSRA & (1<<ADSC)));
	return ADC;
}
void ADC_init(void)
{
	ADCSRA = (1<<ADEN);//|(1<<ADSC);//|(1<<ADIF);
 590:	80 e8       	ldi	r24, 0x80	; 128
 592:	80 93 7a 00 	sts	0x007A, r24
 ADC_init();
 
 while(1)
 {
	 adc_temp = adc_read();
	 adc_temp = (adc_temp)/3;
 596:	0f 2e       	mov	r0, r31
 598:	f3 e0       	ldi	r31, 0x03	; 3
 59a:	8f 2e       	mov	r8, r31
 59c:	91 2c       	mov	r9, r1
 59e:	f0 2d       	mov	r31, r0
	 sprintf(temp, "%d", adc_temp);
 5a0:	0f 2e       	mov	r0, r31
 5a2:	fb e1       	ldi	r31, 0x1B	; 27
 5a4:	af 2e       	mov	r10, r31
 5a6:	f1 e0       	ldi	r31, 0x01	; 1
 5a8:	bf 2e       	mov	r11, r31
 5aa:	f0 2d       	mov	r31, r0
 5ac:	ce 01       	movw	r24, r28
 5ae:	01 96       	adiw	r24, 0x01	; 1
 5b0:	6c 01       	movw	r12, r24
		nokia_lcd_write_char(*str++, scale);
}

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
 5b2:	0f 2e       	mov	r0, r31
 5b4:	fa e2       	ldi	r31, 0x2A	; 42
 5b6:	ef 2e       	mov	r14, r31
 5b8:	f3 e0       	ldi	r31, 0x03	; 3
 5ba:	ff 2e       	mov	r15, r31
 5bc:	f0 2d       	mov	r31, r0
	nokia_lcd.cursor_y = y;
 5be:	0b e2       	ldi	r16, 0x2B	; 43
 5c0:	13 e0       	ldi	r17, 0x03	; 3
 5c2:	0f 2e       	mov	r0, r31
 5c4:	f4 e1       	ldi	r31, 0x14	; 20
 5c6:	6f 2e       	mov	r6, r31
 5c8:	f0 2d       	mov	r31, r0
 5ca:	0f 2e       	mov	r0, r31
 5cc:	fe e1       	ldi	r31, 0x1E	; 30
 5ce:	7f 2e       	mov	r7, r31
 5d0:	f0 2d       	mov	r31, r0
 nokia_lcd_write_string("temperature is", 1);
 ADC_init();
 
 while(1)
 {
	 adc_temp = adc_read();
 5d2:	0e 94 98 02 	call	0x530	; 0x530 <adc_read>
	 adc_temp = (adc_temp)/3;
 5d6:	b4 01       	movw	r22, r8
 5d8:	0e 94 2a 03 	call	0x654	; 0x654 <__divmodhi4>
	 sprintf(temp, "%d", adc_temp);
 5dc:	7f 93       	push	r23
 5de:	6f 93       	push	r22
 5e0:	bf 92       	push	r11
 5e2:	af 92       	push	r10
 5e4:	df 92       	push	r13
 5e6:	cf 92       	push	r12
 5e8:	0e 94 52 03 	call	0x6a4	; 0x6a4 <sprintf>
		nokia_lcd_write_char(*str++, scale);
}

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
 5ec:	f7 01       	movw	r30, r14
 5ee:	10 82       	st	Z, r1
	nokia_lcd.cursor_y = y;
 5f0:	f8 01       	movw	r30, r16
 5f2:	60 82       	st	Z, r6
	 nokia_lcd_set_cursor(0, 20);
	 nokia_lcd_write_string(temp, 1);
 5f4:	61 e0       	ldi	r22, 0x01	; 1
 5f6:	c6 01       	movw	r24, r12
 5f8:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <nokia_lcd_write_string>
	 nokia_lcd_write_string(" degrees", 1);
 5fc:	61 e0       	ldi	r22, 0x01	; 1
 5fe:	8e e1       	ldi	r24, 0x1E	; 30
 600:	91 e0       	ldi	r25, 0x01	; 1
 602:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <nokia_lcd_write_string>
		nokia_lcd_write_char(*str++, scale);
}

void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
	nokia_lcd.cursor_x = x;
 606:	f7 01       	movw	r30, r14
 608:	10 82       	st	Z, r1
	nokia_lcd.cursor_y = y;
 60a:	f8 01       	movw	r30, r16
 60c:	70 82       	st	Z, r7
 60e:	0f 90       	pop	r0
 610:	0f 90       	pop	r0
 612:	0f 90       	pop	r0
 614:	0f 90       	pop	r0
 616:	0f 90       	pop	r0
 618:	0f 90       	pop	r0
	 nokia_lcd_set_cursor(0, 30);
	 nokia_lcd_write_string("Fahrenheit", 1);
 61a:	61 e0       	ldi	r22, 0x01	; 1
 61c:	87 e2       	ldi	r24, 0x27	; 39
 61e:	91 e0       	ldi	r25, 0x01	; 1
 620:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <nokia_lcd_write_string>
	 nokia_lcd_render();
 624:	0e 94 7e 02 	call	0x4fc	; 0x4fc <nokia_lcd_render>
 628:	ff e3       	ldi	r31, 0x3F	; 63
 62a:	2d e0       	ldi	r18, 0x0D	; 13
 62c:	83 e0       	ldi	r24, 0x03	; 3
 62e:	f1 50       	subi	r31, 0x01	; 1
 630:	20 40       	sbci	r18, 0x00	; 0
 632:	80 40       	sbci	r24, 0x00	; 0
 634:	e1 f7       	brne	.-8      	; 0x62e <main+0xdc>
 636:	00 c0       	rjmp	.+0      	; 0x638 <main+0xe6>
 638:	00 00       	nop
 63a:	cb cf       	rjmp	.-106    	; 0x5d2 <main+0x80>

0000063c <__udivmodqi4>:
 63c:	99 1b       	sub	r25, r25
 63e:	79 e0       	ldi	r23, 0x09	; 9
 640:	04 c0       	rjmp	.+8      	; 0x64a <__udivmodqi4_ep>

00000642 <__udivmodqi4_loop>:
 642:	99 1f       	adc	r25, r25
 644:	96 17       	cp	r25, r22
 646:	08 f0       	brcs	.+2      	; 0x64a <__udivmodqi4_ep>
 648:	96 1b       	sub	r25, r22

0000064a <__udivmodqi4_ep>:
 64a:	88 1f       	adc	r24, r24
 64c:	7a 95       	dec	r23
 64e:	c9 f7       	brne	.-14     	; 0x642 <__udivmodqi4_loop>
 650:	80 95       	com	r24
 652:	08 95       	ret

00000654 <__divmodhi4>:
 654:	97 fb       	bst	r25, 7
 656:	07 2e       	mov	r0, r23
 658:	16 f4       	brtc	.+4      	; 0x65e <__divmodhi4+0xa>
 65a:	00 94       	com	r0
 65c:	07 d0       	rcall	.+14     	; 0x66c <__divmodhi4_neg1>
 65e:	77 fd       	sbrc	r23, 7
 660:	09 d0       	rcall	.+18     	; 0x674 <__divmodhi4_neg2>
 662:	0e 94 3e 03 	call	0x67c	; 0x67c <__udivmodhi4>
 666:	07 fc       	sbrc	r0, 7
 668:	05 d0       	rcall	.+10     	; 0x674 <__divmodhi4_neg2>
 66a:	3e f4       	brtc	.+14     	; 0x67a <__divmodhi4_exit>

0000066c <__divmodhi4_neg1>:
 66c:	90 95       	com	r25
 66e:	81 95       	neg	r24
 670:	9f 4f       	sbci	r25, 0xFF	; 255
 672:	08 95       	ret

00000674 <__divmodhi4_neg2>:
 674:	70 95       	com	r23
 676:	61 95       	neg	r22
 678:	7f 4f       	sbci	r23, 0xFF	; 255

0000067a <__divmodhi4_exit>:
 67a:	08 95       	ret

0000067c <__udivmodhi4>:
 67c:	aa 1b       	sub	r26, r26
 67e:	bb 1b       	sub	r27, r27
 680:	51 e1       	ldi	r21, 0x11	; 17
 682:	07 c0       	rjmp	.+14     	; 0x692 <__udivmodhi4_ep>

00000684 <__udivmodhi4_loop>:
 684:	aa 1f       	adc	r26, r26
 686:	bb 1f       	adc	r27, r27
 688:	a6 17       	cp	r26, r22
 68a:	b7 07       	cpc	r27, r23
 68c:	10 f0       	brcs	.+4      	; 0x692 <__udivmodhi4_ep>
 68e:	a6 1b       	sub	r26, r22
 690:	b7 0b       	sbc	r27, r23

00000692 <__udivmodhi4_ep>:
 692:	88 1f       	adc	r24, r24
 694:	99 1f       	adc	r25, r25
 696:	5a 95       	dec	r21
 698:	a9 f7       	brne	.-22     	; 0x684 <__udivmodhi4_loop>
 69a:	80 95       	com	r24
 69c:	90 95       	com	r25
 69e:	bc 01       	movw	r22, r24
 6a0:	cd 01       	movw	r24, r26
 6a2:	08 95       	ret

000006a4 <sprintf>:
 6a4:	ae e0       	ldi	r26, 0x0E	; 14
 6a6:	b0 e0       	ldi	r27, 0x00	; 0
 6a8:	e8 e5       	ldi	r30, 0x58	; 88
 6aa:	f3 e0       	ldi	r31, 0x03	; 3
 6ac:	0c 94 01 06 	jmp	0xc02	; 0xc02 <__prologue_saves__+0x1c>
 6b0:	0d 89       	ldd	r16, Y+21	; 0x15
 6b2:	1e 89       	ldd	r17, Y+22	; 0x16
 6b4:	86 e0       	ldi	r24, 0x06	; 6
 6b6:	8c 83       	std	Y+4, r24	; 0x04
 6b8:	1a 83       	std	Y+2, r17	; 0x02
 6ba:	09 83       	std	Y+1, r16	; 0x01
 6bc:	8f ef       	ldi	r24, 0xFF	; 255
 6be:	9f e7       	ldi	r25, 0x7F	; 127
 6c0:	9e 83       	std	Y+6, r25	; 0x06
 6c2:	8d 83       	std	Y+5, r24	; 0x05
 6c4:	ae 01       	movw	r20, r28
 6c6:	47 5e       	subi	r20, 0xE7	; 231
 6c8:	5f 4f       	sbci	r21, 0xFF	; 255
 6ca:	6f 89       	ldd	r22, Y+23	; 0x17
 6cc:	78 8d       	ldd	r23, Y+24	; 0x18
 6ce:	ce 01       	movw	r24, r28
 6d0:	01 96       	adiw	r24, 0x01	; 1
 6d2:	0e 94 75 03 	call	0x6ea	; 0x6ea <vfprintf>
 6d6:	2f 81       	ldd	r18, Y+7	; 0x07
 6d8:	38 85       	ldd	r19, Y+8	; 0x08
 6da:	f8 01       	movw	r30, r16
 6dc:	e2 0f       	add	r30, r18
 6de:	f3 1f       	adc	r31, r19
 6e0:	10 82       	st	Z, r1
 6e2:	2e 96       	adiw	r28, 0x0e	; 14
 6e4:	e4 e0       	ldi	r30, 0x04	; 4
 6e6:	0c 94 1d 06 	jmp	0xc3a	; 0xc3a <__epilogue_restores__+0x1c>

000006ea <vfprintf>:
 6ea:	ac e0       	ldi	r26, 0x0C	; 12
 6ec:	b0 e0       	ldi	r27, 0x00	; 0
 6ee:	eb e7       	ldi	r30, 0x7B	; 123
 6f0:	f3 e0       	ldi	r31, 0x03	; 3
 6f2:	0c 94 f3 05 	jmp	0xbe6	; 0xbe6 <__prologue_saves__>
 6f6:	7c 01       	movw	r14, r24
 6f8:	6b 01       	movw	r12, r22
 6fa:	8a 01       	movw	r16, r20
 6fc:	fc 01       	movw	r30, r24
 6fe:	17 82       	std	Z+7, r1	; 0x07
 700:	16 82       	std	Z+6, r1	; 0x06
 702:	83 81       	ldd	r24, Z+3	; 0x03
 704:	81 ff       	sbrs	r24, 1
 706:	bd c1       	rjmp	.+890    	; 0xa82 <__stack+0x183>
 708:	ce 01       	movw	r24, r28
 70a:	01 96       	adiw	r24, 0x01	; 1
 70c:	4c 01       	movw	r8, r24
 70e:	f7 01       	movw	r30, r14
 710:	93 81       	ldd	r25, Z+3	; 0x03
 712:	f6 01       	movw	r30, r12
 714:	93 fd       	sbrc	r25, 3
 716:	85 91       	lpm	r24, Z+
 718:	93 ff       	sbrs	r25, 3
 71a:	81 91       	ld	r24, Z+
 71c:	6f 01       	movw	r12, r30
 71e:	88 23       	and	r24, r24
 720:	09 f4       	brne	.+2      	; 0x724 <vfprintf+0x3a>
 722:	ab c1       	rjmp	.+854    	; 0xa7a <__stack+0x17b>
 724:	85 32       	cpi	r24, 0x25	; 37
 726:	39 f4       	brne	.+14     	; 0x736 <vfprintf+0x4c>
 728:	93 fd       	sbrc	r25, 3
 72a:	85 91       	lpm	r24, Z+
 72c:	93 ff       	sbrs	r25, 3
 72e:	81 91       	ld	r24, Z+
 730:	6f 01       	movw	r12, r30
 732:	85 32       	cpi	r24, 0x25	; 37
 734:	29 f4       	brne	.+10     	; 0x740 <vfprintf+0x56>
 736:	b7 01       	movw	r22, r14
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	0e 94 5d 05 	call	0xaba	; 0xaba <fputc>
 73e:	e7 cf       	rjmp	.-50     	; 0x70e <vfprintf+0x24>
 740:	51 2c       	mov	r5, r1
 742:	31 2c       	mov	r3, r1
 744:	20 e0       	ldi	r18, 0x00	; 0
 746:	20 32       	cpi	r18, 0x20	; 32
 748:	a0 f4       	brcc	.+40     	; 0x772 <vfprintf+0x88>
 74a:	8b 32       	cpi	r24, 0x2B	; 43
 74c:	69 f0       	breq	.+26     	; 0x768 <vfprintf+0x7e>
 74e:	30 f4       	brcc	.+12     	; 0x75c <vfprintf+0x72>
 750:	80 32       	cpi	r24, 0x20	; 32
 752:	59 f0       	breq	.+22     	; 0x76a <vfprintf+0x80>
 754:	83 32       	cpi	r24, 0x23	; 35
 756:	69 f4       	brne	.+26     	; 0x772 <vfprintf+0x88>
 758:	20 61       	ori	r18, 0x10	; 16
 75a:	2c c0       	rjmp	.+88     	; 0x7b4 <vfprintf+0xca>
 75c:	8d 32       	cpi	r24, 0x2D	; 45
 75e:	39 f0       	breq	.+14     	; 0x76e <vfprintf+0x84>
 760:	80 33       	cpi	r24, 0x30	; 48
 762:	39 f4       	brne	.+14     	; 0x772 <vfprintf+0x88>
 764:	21 60       	ori	r18, 0x01	; 1
 766:	26 c0       	rjmp	.+76     	; 0x7b4 <vfprintf+0xca>
 768:	22 60       	ori	r18, 0x02	; 2
 76a:	24 60       	ori	r18, 0x04	; 4
 76c:	23 c0       	rjmp	.+70     	; 0x7b4 <vfprintf+0xca>
 76e:	28 60       	ori	r18, 0x08	; 8
 770:	21 c0       	rjmp	.+66     	; 0x7b4 <vfprintf+0xca>
 772:	27 fd       	sbrc	r18, 7
 774:	27 c0       	rjmp	.+78     	; 0x7c4 <vfprintf+0xda>
 776:	30 ed       	ldi	r19, 0xD0	; 208
 778:	38 0f       	add	r19, r24
 77a:	3a 30       	cpi	r19, 0x0A	; 10
 77c:	78 f4       	brcc	.+30     	; 0x79c <vfprintf+0xb2>
 77e:	26 ff       	sbrs	r18, 6
 780:	06 c0       	rjmp	.+12     	; 0x78e <vfprintf+0xa4>
 782:	fa e0       	ldi	r31, 0x0A	; 10
 784:	5f 9e       	mul	r5, r31
 786:	30 0d       	add	r19, r0
 788:	11 24       	eor	r1, r1
 78a:	53 2e       	mov	r5, r19
 78c:	13 c0       	rjmp	.+38     	; 0x7b4 <vfprintf+0xca>
 78e:	8a e0       	ldi	r24, 0x0A	; 10
 790:	38 9e       	mul	r3, r24
 792:	30 0d       	add	r19, r0
 794:	11 24       	eor	r1, r1
 796:	33 2e       	mov	r3, r19
 798:	20 62       	ori	r18, 0x20	; 32
 79a:	0c c0       	rjmp	.+24     	; 0x7b4 <vfprintf+0xca>
 79c:	8e 32       	cpi	r24, 0x2E	; 46
 79e:	21 f4       	brne	.+8      	; 0x7a8 <vfprintf+0xbe>
 7a0:	26 fd       	sbrc	r18, 6
 7a2:	6b c1       	rjmp	.+726    	; 0xa7a <__stack+0x17b>
 7a4:	20 64       	ori	r18, 0x40	; 64
 7a6:	06 c0       	rjmp	.+12     	; 0x7b4 <vfprintf+0xca>
 7a8:	8c 36       	cpi	r24, 0x6C	; 108
 7aa:	11 f4       	brne	.+4      	; 0x7b0 <vfprintf+0xc6>
 7ac:	20 68       	ori	r18, 0x80	; 128
 7ae:	02 c0       	rjmp	.+4      	; 0x7b4 <vfprintf+0xca>
 7b0:	88 36       	cpi	r24, 0x68	; 104
 7b2:	41 f4       	brne	.+16     	; 0x7c4 <vfprintf+0xda>
 7b4:	f6 01       	movw	r30, r12
 7b6:	93 fd       	sbrc	r25, 3
 7b8:	85 91       	lpm	r24, Z+
 7ba:	93 ff       	sbrs	r25, 3
 7bc:	81 91       	ld	r24, Z+
 7be:	6f 01       	movw	r12, r30
 7c0:	81 11       	cpse	r24, r1
 7c2:	c1 cf       	rjmp	.-126    	; 0x746 <vfprintf+0x5c>
 7c4:	98 2f       	mov	r25, r24
 7c6:	9f 7d       	andi	r25, 0xDF	; 223
 7c8:	95 54       	subi	r25, 0x45	; 69
 7ca:	93 30       	cpi	r25, 0x03	; 3
 7cc:	28 f4       	brcc	.+10     	; 0x7d8 <vfprintf+0xee>
 7ce:	0c 5f       	subi	r16, 0xFC	; 252
 7d0:	1f 4f       	sbci	r17, 0xFF	; 255
 7d2:	ff e3       	ldi	r31, 0x3F	; 63
 7d4:	f9 83       	std	Y+1, r31	; 0x01
 7d6:	0d c0       	rjmp	.+26     	; 0x7f2 <vfprintf+0x108>
 7d8:	83 36       	cpi	r24, 0x63	; 99
 7da:	31 f0       	breq	.+12     	; 0x7e8 <vfprintf+0xfe>
 7dc:	83 37       	cpi	r24, 0x73	; 115
 7de:	71 f0       	breq	.+28     	; 0x7fc <vfprintf+0x112>
 7e0:	83 35       	cpi	r24, 0x53	; 83
 7e2:	09 f0       	breq	.+2      	; 0x7e6 <vfprintf+0xfc>
 7e4:	5b c0       	rjmp	.+182    	; 0x89c <vfprintf+0x1b2>
 7e6:	22 c0       	rjmp	.+68     	; 0x82c <vfprintf+0x142>
 7e8:	f8 01       	movw	r30, r16
 7ea:	80 81       	ld	r24, Z
 7ec:	89 83       	std	Y+1, r24	; 0x01
 7ee:	0e 5f       	subi	r16, 0xFE	; 254
 7f0:	1f 4f       	sbci	r17, 0xFF	; 255
 7f2:	44 24       	eor	r4, r4
 7f4:	43 94       	inc	r4
 7f6:	51 2c       	mov	r5, r1
 7f8:	54 01       	movw	r10, r8
 7fa:	15 c0       	rjmp	.+42     	; 0x826 <vfprintf+0x13c>
 7fc:	38 01       	movw	r6, r16
 7fe:	f2 e0       	ldi	r31, 0x02	; 2
 800:	6f 0e       	add	r6, r31
 802:	71 1c       	adc	r7, r1
 804:	f8 01       	movw	r30, r16
 806:	a0 80       	ld	r10, Z
 808:	b1 80       	ldd	r11, Z+1	; 0x01
 80a:	26 ff       	sbrs	r18, 6
 80c:	03 c0       	rjmp	.+6      	; 0x814 <vfprintf+0x12a>
 80e:	65 2d       	mov	r22, r5
 810:	70 e0       	ldi	r23, 0x00	; 0
 812:	02 c0       	rjmp	.+4      	; 0x818 <vfprintf+0x12e>
 814:	6f ef       	ldi	r22, 0xFF	; 255
 816:	7f ef       	ldi	r23, 0xFF	; 255
 818:	c5 01       	movw	r24, r10
 81a:	2c 87       	std	Y+12, r18	; 0x0c
 81c:	0e 94 52 05 	call	0xaa4	; 0xaa4 <strnlen>
 820:	2c 01       	movw	r4, r24
 822:	83 01       	movw	r16, r6
 824:	2c 85       	ldd	r18, Y+12	; 0x0c
 826:	2f 77       	andi	r18, 0x7F	; 127
 828:	22 2e       	mov	r2, r18
 82a:	17 c0       	rjmp	.+46     	; 0x85a <vfprintf+0x170>
 82c:	38 01       	movw	r6, r16
 82e:	f2 e0       	ldi	r31, 0x02	; 2
 830:	6f 0e       	add	r6, r31
 832:	71 1c       	adc	r7, r1
 834:	f8 01       	movw	r30, r16
 836:	a0 80       	ld	r10, Z
 838:	b1 80       	ldd	r11, Z+1	; 0x01
 83a:	26 ff       	sbrs	r18, 6
 83c:	03 c0       	rjmp	.+6      	; 0x844 <vfprintf+0x15a>
 83e:	65 2d       	mov	r22, r5
 840:	70 e0       	ldi	r23, 0x00	; 0
 842:	02 c0       	rjmp	.+4      	; 0x848 <vfprintf+0x15e>
 844:	6f ef       	ldi	r22, 0xFF	; 255
 846:	7f ef       	ldi	r23, 0xFF	; 255
 848:	c5 01       	movw	r24, r10
 84a:	2c 87       	std	Y+12, r18	; 0x0c
 84c:	0e 94 47 05 	call	0xa8e	; 0xa8e <strnlen_P>
 850:	2c 01       	movw	r4, r24
 852:	2c 85       	ldd	r18, Y+12	; 0x0c
 854:	20 68       	ori	r18, 0x80	; 128
 856:	22 2e       	mov	r2, r18
 858:	83 01       	movw	r16, r6
 85a:	23 fc       	sbrc	r2, 3
 85c:	1b c0       	rjmp	.+54     	; 0x894 <vfprintf+0x1aa>
 85e:	83 2d       	mov	r24, r3
 860:	90 e0       	ldi	r25, 0x00	; 0
 862:	48 16       	cp	r4, r24
 864:	59 06       	cpc	r5, r25
 866:	b0 f4       	brcc	.+44     	; 0x894 <vfprintf+0x1aa>
 868:	b7 01       	movw	r22, r14
 86a:	80 e2       	ldi	r24, 0x20	; 32
 86c:	90 e0       	ldi	r25, 0x00	; 0
 86e:	0e 94 5d 05 	call	0xaba	; 0xaba <fputc>
 872:	3a 94       	dec	r3
 874:	f4 cf       	rjmp	.-24     	; 0x85e <vfprintf+0x174>
 876:	f5 01       	movw	r30, r10
 878:	27 fc       	sbrc	r2, 7
 87a:	85 91       	lpm	r24, Z+
 87c:	27 fe       	sbrs	r2, 7
 87e:	81 91       	ld	r24, Z+
 880:	5f 01       	movw	r10, r30
 882:	b7 01       	movw	r22, r14
 884:	90 e0       	ldi	r25, 0x00	; 0
 886:	0e 94 5d 05 	call	0xaba	; 0xaba <fputc>
 88a:	31 10       	cpse	r3, r1
 88c:	3a 94       	dec	r3
 88e:	f1 e0       	ldi	r31, 0x01	; 1
 890:	4f 1a       	sub	r4, r31
 892:	51 08       	sbc	r5, r1
 894:	41 14       	cp	r4, r1
 896:	51 04       	cpc	r5, r1
 898:	71 f7       	brne	.-36     	; 0x876 <vfprintf+0x18c>
 89a:	e5 c0       	rjmp	.+458    	; 0xa66 <__stack+0x167>
 89c:	84 36       	cpi	r24, 0x64	; 100
 89e:	11 f0       	breq	.+4      	; 0x8a4 <vfprintf+0x1ba>
 8a0:	89 36       	cpi	r24, 0x69	; 105
 8a2:	39 f5       	brne	.+78     	; 0x8f2 <vfprintf+0x208>
 8a4:	f8 01       	movw	r30, r16
 8a6:	27 ff       	sbrs	r18, 7
 8a8:	07 c0       	rjmp	.+14     	; 0x8b8 <vfprintf+0x1ce>
 8aa:	60 81       	ld	r22, Z
 8ac:	71 81       	ldd	r23, Z+1	; 0x01
 8ae:	82 81       	ldd	r24, Z+2	; 0x02
 8b0:	93 81       	ldd	r25, Z+3	; 0x03
 8b2:	0c 5f       	subi	r16, 0xFC	; 252
 8b4:	1f 4f       	sbci	r17, 0xFF	; 255
 8b6:	08 c0       	rjmp	.+16     	; 0x8c8 <vfprintf+0x1de>
 8b8:	60 81       	ld	r22, Z
 8ba:	71 81       	ldd	r23, Z+1	; 0x01
 8bc:	07 2e       	mov	r0, r23
 8be:	00 0c       	add	r0, r0
 8c0:	88 0b       	sbc	r24, r24
 8c2:	99 0b       	sbc	r25, r25
 8c4:	0e 5f       	subi	r16, 0xFE	; 254
 8c6:	1f 4f       	sbci	r17, 0xFF	; 255
 8c8:	2f 76       	andi	r18, 0x6F	; 111
 8ca:	72 2e       	mov	r7, r18
 8cc:	97 ff       	sbrs	r25, 7
 8ce:	09 c0       	rjmp	.+18     	; 0x8e2 <vfprintf+0x1f8>
 8d0:	90 95       	com	r25
 8d2:	80 95       	com	r24
 8d4:	70 95       	com	r23
 8d6:	61 95       	neg	r22
 8d8:	7f 4f       	sbci	r23, 0xFF	; 255
 8da:	8f 4f       	sbci	r24, 0xFF	; 255
 8dc:	9f 4f       	sbci	r25, 0xFF	; 255
 8de:	20 68       	ori	r18, 0x80	; 128
 8e0:	72 2e       	mov	r7, r18
 8e2:	2a e0       	ldi	r18, 0x0A	; 10
 8e4:	30 e0       	ldi	r19, 0x00	; 0
 8e6:	a4 01       	movw	r20, r8
 8e8:	0e 94 95 05 	call	0xb2a	; 0xb2a <__ultoa_invert>
 8ec:	a8 2e       	mov	r10, r24
 8ee:	a8 18       	sub	r10, r8
 8f0:	44 c0       	rjmp	.+136    	; 0x97a <__stack+0x7b>
 8f2:	85 37       	cpi	r24, 0x75	; 117
 8f4:	29 f4       	brne	.+10     	; 0x900 <__stack+0x1>
 8f6:	2f 7e       	andi	r18, 0xEF	; 239
 8f8:	b2 2e       	mov	r11, r18
 8fa:	2a e0       	ldi	r18, 0x0A	; 10
 8fc:	30 e0       	ldi	r19, 0x00	; 0
 8fe:	25 c0       	rjmp	.+74     	; 0x94a <__stack+0x4b>
 900:	f2 2f       	mov	r31, r18
 902:	f9 7f       	andi	r31, 0xF9	; 249
 904:	bf 2e       	mov	r11, r31
 906:	8f 36       	cpi	r24, 0x6F	; 111
 908:	c1 f0       	breq	.+48     	; 0x93a <__stack+0x3b>
 90a:	18 f4       	brcc	.+6      	; 0x912 <__stack+0x13>
 90c:	88 35       	cpi	r24, 0x58	; 88
 90e:	79 f0       	breq	.+30     	; 0x92e <__stack+0x2f>
 910:	b4 c0       	rjmp	.+360    	; 0xa7a <__stack+0x17b>
 912:	80 37       	cpi	r24, 0x70	; 112
 914:	19 f0       	breq	.+6      	; 0x91c <__stack+0x1d>
 916:	88 37       	cpi	r24, 0x78	; 120
 918:	21 f0       	breq	.+8      	; 0x922 <__stack+0x23>
 91a:	af c0       	rjmp	.+350    	; 0xa7a <__stack+0x17b>
 91c:	2f 2f       	mov	r18, r31
 91e:	20 61       	ori	r18, 0x10	; 16
 920:	b2 2e       	mov	r11, r18
 922:	b4 fe       	sbrs	r11, 4
 924:	0d c0       	rjmp	.+26     	; 0x940 <__stack+0x41>
 926:	8b 2d       	mov	r24, r11
 928:	84 60       	ori	r24, 0x04	; 4
 92a:	b8 2e       	mov	r11, r24
 92c:	09 c0       	rjmp	.+18     	; 0x940 <__stack+0x41>
 92e:	24 ff       	sbrs	r18, 4
 930:	0a c0       	rjmp	.+20     	; 0x946 <__stack+0x47>
 932:	9f 2f       	mov	r25, r31
 934:	96 60       	ori	r25, 0x06	; 6
 936:	b9 2e       	mov	r11, r25
 938:	06 c0       	rjmp	.+12     	; 0x946 <__stack+0x47>
 93a:	28 e0       	ldi	r18, 0x08	; 8
 93c:	30 e0       	ldi	r19, 0x00	; 0
 93e:	05 c0       	rjmp	.+10     	; 0x94a <__stack+0x4b>
 940:	20 e1       	ldi	r18, 0x10	; 16
 942:	30 e0       	ldi	r19, 0x00	; 0
 944:	02 c0       	rjmp	.+4      	; 0x94a <__stack+0x4b>
 946:	20 e1       	ldi	r18, 0x10	; 16
 948:	32 e0       	ldi	r19, 0x02	; 2
 94a:	f8 01       	movw	r30, r16
 94c:	b7 fe       	sbrs	r11, 7
 94e:	07 c0       	rjmp	.+14     	; 0x95e <__stack+0x5f>
 950:	60 81       	ld	r22, Z
 952:	71 81       	ldd	r23, Z+1	; 0x01
 954:	82 81       	ldd	r24, Z+2	; 0x02
 956:	93 81       	ldd	r25, Z+3	; 0x03
 958:	0c 5f       	subi	r16, 0xFC	; 252
 95a:	1f 4f       	sbci	r17, 0xFF	; 255
 95c:	06 c0       	rjmp	.+12     	; 0x96a <__stack+0x6b>
 95e:	60 81       	ld	r22, Z
 960:	71 81       	ldd	r23, Z+1	; 0x01
 962:	80 e0       	ldi	r24, 0x00	; 0
 964:	90 e0       	ldi	r25, 0x00	; 0
 966:	0e 5f       	subi	r16, 0xFE	; 254
 968:	1f 4f       	sbci	r17, 0xFF	; 255
 96a:	a4 01       	movw	r20, r8
 96c:	0e 94 95 05 	call	0xb2a	; 0xb2a <__ultoa_invert>
 970:	a8 2e       	mov	r10, r24
 972:	a8 18       	sub	r10, r8
 974:	fb 2d       	mov	r31, r11
 976:	ff 77       	andi	r31, 0x7F	; 127
 978:	7f 2e       	mov	r7, r31
 97a:	76 fe       	sbrs	r7, 6
 97c:	0b c0       	rjmp	.+22     	; 0x994 <__stack+0x95>
 97e:	37 2d       	mov	r19, r7
 980:	3e 7f       	andi	r19, 0xFE	; 254
 982:	a5 14       	cp	r10, r5
 984:	50 f4       	brcc	.+20     	; 0x99a <__stack+0x9b>
 986:	74 fe       	sbrs	r7, 4
 988:	0a c0       	rjmp	.+20     	; 0x99e <__stack+0x9f>
 98a:	72 fc       	sbrc	r7, 2
 98c:	08 c0       	rjmp	.+16     	; 0x99e <__stack+0x9f>
 98e:	37 2d       	mov	r19, r7
 990:	3e 7e       	andi	r19, 0xEE	; 238
 992:	05 c0       	rjmp	.+10     	; 0x99e <__stack+0x9f>
 994:	ba 2c       	mov	r11, r10
 996:	37 2d       	mov	r19, r7
 998:	03 c0       	rjmp	.+6      	; 0x9a0 <__stack+0xa1>
 99a:	ba 2c       	mov	r11, r10
 99c:	01 c0       	rjmp	.+2      	; 0x9a0 <__stack+0xa1>
 99e:	b5 2c       	mov	r11, r5
 9a0:	34 ff       	sbrs	r19, 4
 9a2:	0d c0       	rjmp	.+26     	; 0x9be <__stack+0xbf>
 9a4:	fe 01       	movw	r30, r28
 9a6:	ea 0d       	add	r30, r10
 9a8:	f1 1d       	adc	r31, r1
 9aa:	80 81       	ld	r24, Z
 9ac:	80 33       	cpi	r24, 0x30	; 48
 9ae:	11 f4       	brne	.+4      	; 0x9b4 <__stack+0xb5>
 9b0:	39 7e       	andi	r19, 0xE9	; 233
 9b2:	09 c0       	rjmp	.+18     	; 0x9c6 <__stack+0xc7>
 9b4:	32 ff       	sbrs	r19, 2
 9b6:	06 c0       	rjmp	.+12     	; 0x9c4 <__stack+0xc5>
 9b8:	b3 94       	inc	r11
 9ba:	b3 94       	inc	r11
 9bc:	04 c0       	rjmp	.+8      	; 0x9c6 <__stack+0xc7>
 9be:	83 2f       	mov	r24, r19
 9c0:	86 78       	andi	r24, 0x86	; 134
 9c2:	09 f0       	breq	.+2      	; 0x9c6 <__stack+0xc7>
 9c4:	b3 94       	inc	r11
 9c6:	33 fd       	sbrc	r19, 3
 9c8:	13 c0       	rjmp	.+38     	; 0x9f0 <__stack+0xf1>
 9ca:	30 ff       	sbrs	r19, 0
 9cc:	06 c0       	rjmp	.+12     	; 0x9da <__stack+0xdb>
 9ce:	5a 2c       	mov	r5, r10
 9d0:	b3 14       	cp	r11, r3
 9d2:	18 f4       	brcc	.+6      	; 0x9da <__stack+0xdb>
 9d4:	53 0c       	add	r5, r3
 9d6:	5b 18       	sub	r5, r11
 9d8:	b3 2c       	mov	r11, r3
 9da:	b3 14       	cp	r11, r3
 9dc:	68 f4       	brcc	.+26     	; 0x9f8 <__stack+0xf9>
 9de:	b7 01       	movw	r22, r14
 9e0:	80 e2       	ldi	r24, 0x20	; 32
 9e2:	90 e0       	ldi	r25, 0x00	; 0
 9e4:	3c 87       	std	Y+12, r19	; 0x0c
 9e6:	0e 94 5d 05 	call	0xaba	; 0xaba <fputc>
 9ea:	b3 94       	inc	r11
 9ec:	3c 85       	ldd	r19, Y+12	; 0x0c
 9ee:	f5 cf       	rjmp	.-22     	; 0x9da <__stack+0xdb>
 9f0:	b3 14       	cp	r11, r3
 9f2:	10 f4       	brcc	.+4      	; 0x9f8 <__stack+0xf9>
 9f4:	3b 18       	sub	r3, r11
 9f6:	01 c0       	rjmp	.+2      	; 0x9fa <__stack+0xfb>
 9f8:	31 2c       	mov	r3, r1
 9fa:	34 ff       	sbrs	r19, 4
 9fc:	12 c0       	rjmp	.+36     	; 0xa22 <__stack+0x123>
 9fe:	b7 01       	movw	r22, r14
 a00:	80 e3       	ldi	r24, 0x30	; 48
 a02:	90 e0       	ldi	r25, 0x00	; 0
 a04:	3c 87       	std	Y+12, r19	; 0x0c
 a06:	0e 94 5d 05 	call	0xaba	; 0xaba <fputc>
 a0a:	3c 85       	ldd	r19, Y+12	; 0x0c
 a0c:	32 ff       	sbrs	r19, 2
 a0e:	17 c0       	rjmp	.+46     	; 0xa3e <__stack+0x13f>
 a10:	31 fd       	sbrc	r19, 1
 a12:	03 c0       	rjmp	.+6      	; 0xa1a <__stack+0x11b>
 a14:	88 e7       	ldi	r24, 0x78	; 120
 a16:	90 e0       	ldi	r25, 0x00	; 0
 a18:	02 c0       	rjmp	.+4      	; 0xa1e <__stack+0x11f>
 a1a:	88 e5       	ldi	r24, 0x58	; 88
 a1c:	90 e0       	ldi	r25, 0x00	; 0
 a1e:	b7 01       	movw	r22, r14
 a20:	0c c0       	rjmp	.+24     	; 0xa3a <__stack+0x13b>
 a22:	83 2f       	mov	r24, r19
 a24:	86 78       	andi	r24, 0x86	; 134
 a26:	59 f0       	breq	.+22     	; 0xa3e <__stack+0x13f>
 a28:	31 ff       	sbrs	r19, 1
 a2a:	02 c0       	rjmp	.+4      	; 0xa30 <__stack+0x131>
 a2c:	8b e2       	ldi	r24, 0x2B	; 43
 a2e:	01 c0       	rjmp	.+2      	; 0xa32 <__stack+0x133>
 a30:	80 e2       	ldi	r24, 0x20	; 32
 a32:	37 fd       	sbrc	r19, 7
 a34:	8d e2       	ldi	r24, 0x2D	; 45
 a36:	b7 01       	movw	r22, r14
 a38:	90 e0       	ldi	r25, 0x00	; 0
 a3a:	0e 94 5d 05 	call	0xaba	; 0xaba <fputc>
 a3e:	a5 14       	cp	r10, r5
 a40:	38 f4       	brcc	.+14     	; 0xa50 <__stack+0x151>
 a42:	b7 01       	movw	r22, r14
 a44:	80 e3       	ldi	r24, 0x30	; 48
 a46:	90 e0       	ldi	r25, 0x00	; 0
 a48:	0e 94 5d 05 	call	0xaba	; 0xaba <fputc>
 a4c:	5a 94       	dec	r5
 a4e:	f7 cf       	rjmp	.-18     	; 0xa3e <__stack+0x13f>
 a50:	aa 94       	dec	r10
 a52:	f4 01       	movw	r30, r8
 a54:	ea 0d       	add	r30, r10
 a56:	f1 1d       	adc	r31, r1
 a58:	80 81       	ld	r24, Z
 a5a:	b7 01       	movw	r22, r14
 a5c:	90 e0       	ldi	r25, 0x00	; 0
 a5e:	0e 94 5d 05 	call	0xaba	; 0xaba <fputc>
 a62:	a1 10       	cpse	r10, r1
 a64:	f5 cf       	rjmp	.-22     	; 0xa50 <__stack+0x151>
 a66:	33 20       	and	r3, r3
 a68:	09 f4       	brne	.+2      	; 0xa6c <__stack+0x16d>
 a6a:	51 ce       	rjmp	.-862    	; 0x70e <vfprintf+0x24>
 a6c:	b7 01       	movw	r22, r14
 a6e:	80 e2       	ldi	r24, 0x20	; 32
 a70:	90 e0       	ldi	r25, 0x00	; 0
 a72:	0e 94 5d 05 	call	0xaba	; 0xaba <fputc>
 a76:	3a 94       	dec	r3
 a78:	f6 cf       	rjmp	.-20     	; 0xa66 <__stack+0x167>
 a7a:	f7 01       	movw	r30, r14
 a7c:	86 81       	ldd	r24, Z+6	; 0x06
 a7e:	97 81       	ldd	r25, Z+7	; 0x07
 a80:	02 c0       	rjmp	.+4      	; 0xa86 <__stack+0x187>
 a82:	8f ef       	ldi	r24, 0xFF	; 255
 a84:	9f ef       	ldi	r25, 0xFF	; 255
 a86:	2c 96       	adiw	r28, 0x0c	; 12
 a88:	e2 e1       	ldi	r30, 0x12	; 18
 a8a:	0c 94 0f 06 	jmp	0xc1e	; 0xc1e <__epilogue_restores__>

00000a8e <strnlen_P>:
 a8e:	fc 01       	movw	r30, r24
 a90:	05 90       	lpm	r0, Z+
 a92:	61 50       	subi	r22, 0x01	; 1
 a94:	70 40       	sbci	r23, 0x00	; 0
 a96:	01 10       	cpse	r0, r1
 a98:	d8 f7       	brcc	.-10     	; 0xa90 <strnlen_P+0x2>
 a9a:	80 95       	com	r24
 a9c:	90 95       	com	r25
 a9e:	8e 0f       	add	r24, r30
 aa0:	9f 1f       	adc	r25, r31
 aa2:	08 95       	ret

00000aa4 <strnlen>:
 aa4:	fc 01       	movw	r30, r24
 aa6:	61 50       	subi	r22, 0x01	; 1
 aa8:	70 40       	sbci	r23, 0x00	; 0
 aaa:	01 90       	ld	r0, Z+
 aac:	01 10       	cpse	r0, r1
 aae:	d8 f7       	brcc	.-10     	; 0xaa6 <strnlen+0x2>
 ab0:	80 95       	com	r24
 ab2:	90 95       	com	r25
 ab4:	8e 0f       	add	r24, r30
 ab6:	9f 1f       	adc	r25, r31
 ab8:	08 95       	ret

00000aba <fputc>:
 aba:	0f 93       	push	r16
 abc:	1f 93       	push	r17
 abe:	cf 93       	push	r28
 ac0:	df 93       	push	r29
 ac2:	fb 01       	movw	r30, r22
 ac4:	23 81       	ldd	r18, Z+3	; 0x03
 ac6:	21 fd       	sbrc	r18, 1
 ac8:	03 c0       	rjmp	.+6      	; 0xad0 <fputc+0x16>
 aca:	8f ef       	ldi	r24, 0xFF	; 255
 acc:	9f ef       	ldi	r25, 0xFF	; 255
 ace:	28 c0       	rjmp	.+80     	; 0xb20 <fputc+0x66>
 ad0:	22 ff       	sbrs	r18, 2
 ad2:	16 c0       	rjmp	.+44     	; 0xb00 <fputc+0x46>
 ad4:	46 81       	ldd	r20, Z+6	; 0x06
 ad6:	57 81       	ldd	r21, Z+7	; 0x07
 ad8:	24 81       	ldd	r18, Z+4	; 0x04
 ada:	35 81       	ldd	r19, Z+5	; 0x05
 adc:	42 17       	cp	r20, r18
 ade:	53 07       	cpc	r21, r19
 ae0:	44 f4       	brge	.+16     	; 0xaf2 <fputc+0x38>
 ae2:	a0 81       	ld	r26, Z
 ae4:	b1 81       	ldd	r27, Z+1	; 0x01
 ae6:	9d 01       	movw	r18, r26
 ae8:	2f 5f       	subi	r18, 0xFF	; 255
 aea:	3f 4f       	sbci	r19, 0xFF	; 255
 aec:	31 83       	std	Z+1, r19	; 0x01
 aee:	20 83       	st	Z, r18
 af0:	8c 93       	st	X, r24
 af2:	26 81       	ldd	r18, Z+6	; 0x06
 af4:	37 81       	ldd	r19, Z+7	; 0x07
 af6:	2f 5f       	subi	r18, 0xFF	; 255
 af8:	3f 4f       	sbci	r19, 0xFF	; 255
 afa:	37 83       	std	Z+7, r19	; 0x07
 afc:	26 83       	std	Z+6, r18	; 0x06
 afe:	10 c0       	rjmp	.+32     	; 0xb20 <fputc+0x66>
 b00:	eb 01       	movw	r28, r22
 b02:	09 2f       	mov	r16, r25
 b04:	18 2f       	mov	r17, r24
 b06:	00 84       	ldd	r0, Z+8	; 0x08
 b08:	f1 85       	ldd	r31, Z+9	; 0x09
 b0a:	e0 2d       	mov	r30, r0
 b0c:	09 95       	icall
 b0e:	89 2b       	or	r24, r25
 b10:	e1 f6       	brne	.-72     	; 0xaca <fputc+0x10>
 b12:	8e 81       	ldd	r24, Y+6	; 0x06
 b14:	9f 81       	ldd	r25, Y+7	; 0x07
 b16:	01 96       	adiw	r24, 0x01	; 1
 b18:	9f 83       	std	Y+7, r25	; 0x07
 b1a:	8e 83       	std	Y+6, r24	; 0x06
 b1c:	81 2f       	mov	r24, r17
 b1e:	90 2f       	mov	r25, r16
 b20:	df 91       	pop	r29
 b22:	cf 91       	pop	r28
 b24:	1f 91       	pop	r17
 b26:	0f 91       	pop	r16
 b28:	08 95       	ret

00000b2a <__ultoa_invert>:
 b2a:	fa 01       	movw	r30, r20
 b2c:	aa 27       	eor	r26, r26
 b2e:	28 30       	cpi	r18, 0x08	; 8
 b30:	51 f1       	breq	.+84     	; 0xb86 <__ultoa_invert+0x5c>
 b32:	20 31       	cpi	r18, 0x10	; 16
 b34:	81 f1       	breq	.+96     	; 0xb96 <__ultoa_invert+0x6c>
 b36:	e8 94       	clt
 b38:	6f 93       	push	r22
 b3a:	6e 7f       	andi	r22, 0xFE	; 254
 b3c:	6e 5f       	subi	r22, 0xFE	; 254
 b3e:	7f 4f       	sbci	r23, 0xFF	; 255
 b40:	8f 4f       	sbci	r24, 0xFF	; 255
 b42:	9f 4f       	sbci	r25, 0xFF	; 255
 b44:	af 4f       	sbci	r26, 0xFF	; 255
 b46:	b1 e0       	ldi	r27, 0x01	; 1
 b48:	3e d0       	rcall	.+124    	; 0xbc6 <__ultoa_invert+0x9c>
 b4a:	b4 e0       	ldi	r27, 0x04	; 4
 b4c:	3c d0       	rcall	.+120    	; 0xbc6 <__ultoa_invert+0x9c>
 b4e:	67 0f       	add	r22, r23
 b50:	78 1f       	adc	r23, r24
 b52:	89 1f       	adc	r24, r25
 b54:	9a 1f       	adc	r25, r26
 b56:	a1 1d       	adc	r26, r1
 b58:	68 0f       	add	r22, r24
 b5a:	79 1f       	adc	r23, r25
 b5c:	8a 1f       	adc	r24, r26
 b5e:	91 1d       	adc	r25, r1
 b60:	a1 1d       	adc	r26, r1
 b62:	6a 0f       	add	r22, r26
 b64:	71 1d       	adc	r23, r1
 b66:	81 1d       	adc	r24, r1
 b68:	91 1d       	adc	r25, r1
 b6a:	a1 1d       	adc	r26, r1
 b6c:	20 d0       	rcall	.+64     	; 0xbae <__ultoa_invert+0x84>
 b6e:	09 f4       	brne	.+2      	; 0xb72 <__ultoa_invert+0x48>
 b70:	68 94       	set
 b72:	3f 91       	pop	r19
 b74:	2a e0       	ldi	r18, 0x0A	; 10
 b76:	26 9f       	mul	r18, r22
 b78:	11 24       	eor	r1, r1
 b7a:	30 19       	sub	r19, r0
 b7c:	30 5d       	subi	r19, 0xD0	; 208
 b7e:	31 93       	st	Z+, r19
 b80:	de f6       	brtc	.-74     	; 0xb38 <__ultoa_invert+0xe>
 b82:	cf 01       	movw	r24, r30
 b84:	08 95       	ret
 b86:	46 2f       	mov	r20, r22
 b88:	47 70       	andi	r20, 0x07	; 7
 b8a:	40 5d       	subi	r20, 0xD0	; 208
 b8c:	41 93       	st	Z+, r20
 b8e:	b3 e0       	ldi	r27, 0x03	; 3
 b90:	0f d0       	rcall	.+30     	; 0xbb0 <__ultoa_invert+0x86>
 b92:	c9 f7       	brne	.-14     	; 0xb86 <__ultoa_invert+0x5c>
 b94:	f6 cf       	rjmp	.-20     	; 0xb82 <__ultoa_invert+0x58>
 b96:	46 2f       	mov	r20, r22
 b98:	4f 70       	andi	r20, 0x0F	; 15
 b9a:	40 5d       	subi	r20, 0xD0	; 208
 b9c:	4a 33       	cpi	r20, 0x3A	; 58
 b9e:	18 f0       	brcs	.+6      	; 0xba6 <__ultoa_invert+0x7c>
 ba0:	49 5d       	subi	r20, 0xD9	; 217
 ba2:	31 fd       	sbrc	r19, 1
 ba4:	40 52       	subi	r20, 0x20	; 32
 ba6:	41 93       	st	Z+, r20
 ba8:	02 d0       	rcall	.+4      	; 0xbae <__ultoa_invert+0x84>
 baa:	a9 f7       	brne	.-22     	; 0xb96 <__ultoa_invert+0x6c>
 bac:	ea cf       	rjmp	.-44     	; 0xb82 <__ultoa_invert+0x58>
 bae:	b4 e0       	ldi	r27, 0x04	; 4
 bb0:	a6 95       	lsr	r26
 bb2:	97 95       	ror	r25
 bb4:	87 95       	ror	r24
 bb6:	77 95       	ror	r23
 bb8:	67 95       	ror	r22
 bba:	ba 95       	dec	r27
 bbc:	c9 f7       	brne	.-14     	; 0xbb0 <__ultoa_invert+0x86>
 bbe:	00 97       	sbiw	r24, 0x00	; 0
 bc0:	61 05       	cpc	r22, r1
 bc2:	71 05       	cpc	r23, r1
 bc4:	08 95       	ret
 bc6:	9b 01       	movw	r18, r22
 bc8:	ac 01       	movw	r20, r24
 bca:	0a 2e       	mov	r0, r26
 bcc:	06 94       	lsr	r0
 bce:	57 95       	ror	r21
 bd0:	47 95       	ror	r20
 bd2:	37 95       	ror	r19
 bd4:	27 95       	ror	r18
 bd6:	ba 95       	dec	r27
 bd8:	c9 f7       	brne	.-14     	; 0xbcc <__ultoa_invert+0xa2>
 bda:	62 0f       	add	r22, r18
 bdc:	73 1f       	adc	r23, r19
 bde:	84 1f       	adc	r24, r20
 be0:	95 1f       	adc	r25, r21
 be2:	a0 1d       	adc	r26, r0
 be4:	08 95       	ret

00000be6 <__prologue_saves__>:
 be6:	2f 92       	push	r2
 be8:	3f 92       	push	r3
 bea:	4f 92       	push	r4
 bec:	5f 92       	push	r5
 bee:	6f 92       	push	r6
 bf0:	7f 92       	push	r7
 bf2:	8f 92       	push	r8
 bf4:	9f 92       	push	r9
 bf6:	af 92       	push	r10
 bf8:	bf 92       	push	r11
 bfa:	cf 92       	push	r12
 bfc:	df 92       	push	r13
 bfe:	ef 92       	push	r14
 c00:	ff 92       	push	r15
 c02:	0f 93       	push	r16
 c04:	1f 93       	push	r17
 c06:	cf 93       	push	r28
 c08:	df 93       	push	r29
 c0a:	cd b7       	in	r28, 0x3d	; 61
 c0c:	de b7       	in	r29, 0x3e	; 62
 c0e:	ca 1b       	sub	r28, r26
 c10:	db 0b       	sbc	r29, r27
 c12:	0f b6       	in	r0, 0x3f	; 63
 c14:	f8 94       	cli
 c16:	de bf       	out	0x3e, r29	; 62
 c18:	0f be       	out	0x3f, r0	; 63
 c1a:	cd bf       	out	0x3d, r28	; 61
 c1c:	09 94       	ijmp

00000c1e <__epilogue_restores__>:
 c1e:	2a 88       	ldd	r2, Y+18	; 0x12
 c20:	39 88       	ldd	r3, Y+17	; 0x11
 c22:	48 88       	ldd	r4, Y+16	; 0x10
 c24:	5f 84       	ldd	r5, Y+15	; 0x0f
 c26:	6e 84       	ldd	r6, Y+14	; 0x0e
 c28:	7d 84       	ldd	r7, Y+13	; 0x0d
 c2a:	8c 84       	ldd	r8, Y+12	; 0x0c
 c2c:	9b 84       	ldd	r9, Y+11	; 0x0b
 c2e:	aa 84       	ldd	r10, Y+10	; 0x0a
 c30:	b9 84       	ldd	r11, Y+9	; 0x09
 c32:	c8 84       	ldd	r12, Y+8	; 0x08
 c34:	df 80       	ldd	r13, Y+7	; 0x07
 c36:	ee 80       	ldd	r14, Y+6	; 0x06
 c38:	fd 80       	ldd	r15, Y+5	; 0x05
 c3a:	0c 81       	ldd	r16, Y+4	; 0x04
 c3c:	1b 81       	ldd	r17, Y+3	; 0x03
 c3e:	aa 81       	ldd	r26, Y+2	; 0x02
 c40:	b9 81       	ldd	r27, Y+1	; 0x01
 c42:	ce 0f       	add	r28, r30
 c44:	d1 1d       	adc	r29, r1
 c46:	0f b6       	in	r0, 0x3f	; 63
 c48:	f8 94       	cli
 c4a:	de bf       	out	0x3e, r29	; 62
 c4c:	0f be       	out	0x3f, r0	; 63
 c4e:	cd bf       	out	0x3d, r28	; 61
 c50:	ed 01       	movw	r28, r26
 c52:	08 95       	ret

00000c54 <_exit>:
 c54:	f8 94       	cli

00000c56 <__stop_program>:
 c56:	ff cf       	rjmp	.-2      	; 0xc56 <__stop_program>
